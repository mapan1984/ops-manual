{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8fd0\u7ef4\u624b\u518c","title":"\u8fd0\u7ef4\u624b\u518c"},{"location":"#_1","text":"","title":"\u8fd0\u7ef4\u624b\u518c"},{"location":"1-%E8%B4%9F%E8%BD%BD/","text":"","title":"1. \u8d1f\u8f7d"},{"location":"1-%E8%B4%9F%E8%BD%BD/1-memory/","text":"1.1 \u5185\u5b58 \u53c2\u8003\uff1ahttps://mapan1984.github.io/manual/2019/04/28/linux-\u8fd0\u7ef4\u95ee\u9898/#free-\u89e3\u91ca free \u89e3\u91ca $ free -g total used free shared buffers cached Mem: 125 122 3 0 0 99 -/+ buffers/cache: 22 102 Swap: 0 0 0 total : \u603b\u5185\u5b58\u5927\u5c0f used : \u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58 free : \u7a7a\u95f2\u7684\u5185\u5b58 shared : \u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u5185\u5b58\u603b\u989d buffers : \u5757\u7f13\u5b58(buffer cache)\u5927\u5c0f\uff0c\u7f13\u5b58\u5757\u8bbe\u5907\u7684\u5757\u6570\u636e\uff08\u5982\u78c1\u76d8\uff09 cached : \u9875\u7f13\u5b58(page cache)\u5927\u5c0f\uff0c\u7f13\u5b58\u6587\u4ef6\u7684\u9875\u6570\u636e -buffers/cache : \u5df2\u7528\u7684\u5185\u5b58\u6570\uff0c\u4e0d\u5305\u542b\u78c1\u76d8\u7f13\u5b58\uff0c used - buffers - cached +buffers/cache : \u53ef\u7528\u7684\u5185\u5b58\u6570\uff0c\u5305\u542b\u78c1\u76d8\u7f13\u5b58\uff0c free + buffers + cached \u8fd9\u91cc\u7684 buffers , cached \u662f\u78c1\u76d8\u7f13\u5b58\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u4e5f\u53ef\u4ee5\u88ab\u8fdb\u7a0b\u7533\u8bf7\u5230\uff0c\u6240\u4ee5\u8ba1\u7b97\u53ef\u7528\u7684\u5185\u5b58\u65f6\uff0c\u5e94\u8be5\u7528 +buffers/cache \uff0c\u5373 free + buffers + cached \u5b9e\u9645\u88ab\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\uff0c\u5e94\u8be5\u53bb\u9664\u78c1\u76d8\u7f13\u5b58\uff0c\u5373 -buffers/cache \uff0c\u5373 used - buffers - cached \u5728 Linux 2.4 \u7248\u672c\u7684\u5185\u6838\u4e4b\u524d\uff0cpage cache \u4e0e buffer cache \u662f\u5b8c\u5168\u5206\u79bb\u7684\u3002\u4f46\u662f\uff0c\u5757\u8bbe\u5907\u5927\u591a\u662f\u78c1\u76d8\uff0c\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u53c8\u5927\u591a\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u6765\u7ec4\u7ec7\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u5bfc\u81f4\u5f88\u591a\u6570\u636e\u88ab\u7f13\u5b58\u4e86\u4e24\u6b21\uff0c\u6d6a\u8d39\u5185\u5b58\u3002\u6240\u4ee5\u5728 2.4 \u7248\u672c\u5185\u6838\u4e4b\u540e\uff0c\u4e24\u5757\u7f13\u5b58\u8fd1\u4f3c\u878d\u5408\u5728\u4e86\u4e00\u8d77\uff1a\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u7684\u9875\u52a0\u8f7d\u5230\u4e86 page cache\uff0c\u90a3\u4e48\u540c\u65f6 buffer cache \u53ea\u9700\u8981\u7ef4\u62a4\u5757\u6307\u5411\u9875\u7684\u6307\u9488\u5c31\u53ef\u4ee5\u4e86\u3002\u53ea\u6709\u90a3\u4e9b\u6ca1\u6709\u6587\u4ef6\u8868\u793a\u7684\u5757\uff0c\u6216\u8005\u7ed5\u8fc7\u4e86\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u64cd\u4f5c\uff08\u5982dd\u547d\u4ee4\uff09\u7684\u5757\uff0c\u624d\u4f1a\u771f\u6b63\u653e\u5230 buffer cache \u91cc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u63d0\u8d77 page cache\uff0c\u57fa\u672c\u4e0a\u90fd\u540c\u65f6\u6307 page cache \u548c buffer cache \u4e24\u8005\u3002 page_cache linux \u4f7f\u7528 page cache \u589e\u52a0\u5bf9\u78c1\u76d8\u8bbf\u95ee\u7684\u6027\u80fd\uff0cpage cache \u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u4e86\u78c1\u76d8\u4e0a\u7684\u90e8\u5206\u6570\u636e\u3002 \u5bf9\u8bfb\u8bf7\u6c42\uff0c\u7cfb\u7edf\u9996\u5148\u4f1a\u68c0\u67e5\u6240\u8bfb\u9875\u9762\u662f\u5426\u5728 cache \u4e2d: \u5982\u679c\u5728 cache \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee\u78c1\u76d8\u3002 \u5982\u679c\u4e0d\u5728 cache \u4e2d\uff0c\u90a3\u4e48\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6240\u8bf7\u6c42\u7684\u9875\u9762\uff0c\u5e76 \u9884\u8bfb \u51e0\u4e2a\u76f8\u90bb\u7684\u9875\u9762\uff08\u5c40\u90e8\u6027\u539f\u7406\uff09\uff0c\u7f13\u5b58\u5728 cache \u4e2d\u3002 \u5bf9\u5199\u8bf7\u6c42\uff0c\u6570\u636e\u76f4\u63a5\u5199\u5165 cache\uff0c\u78c1\u76d8\u5185\u5bb9\u4e0d\u4f1a\u76f4\u63a5\u66f4\u65b0\uff08\u65ad\u7535\u6709\u4e22\u5931\u6570\u636e\u98ce\u9669\uff09\u5199\u5165\u7684 page \u88ab\u6807\u8bb0\u4e3a dirty\uff0c\u5185\u6838\u4f1a\u5468\u671f\u7684\u5c06 dirty page \u5199\u56de \u78c1\u76d8\u3002 \u76f8\u5173\u53c2\u6570\uff1a # dirty page \u5927\u5c0f\u8fbe\u5230\u591a\u5c11\u5b57\u8282\u540e\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8 vm.dirty_background_bytes = 0 # dirty page \u5185\u5b58\u5360\u6bd4\u8d85\u8fc7 dirty_background_ratio \u540e\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8\uff08\u9ed8\u8ba4 10%\uff09 vm.dirty_background_ratio = 10 # dirty page \u5927\u5c0f\u8fbe\u5230\u591a\u5c11\u5b57\u8282\u540e\u505c\u6b62\u63a5\u6536\u5199\u8bf7\u6c42\uff0c\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8 vm.dirty_bytes = 0 # dirty page \u5185\u5b58\u5360\u6bd4\u8d85\u8fc7 dirty_ratio \u540e\u505c\u6b62\u63a5\u6536\u5199\u8bf7\u6c42\uff0c\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8\uff08\u9ed8\u8ba4 30%\uff09 vm.dirty_ratio = 30 # \u5b58\u5728\u65f6\u95f4\u8d85\u8fc7 dirty_expire_centisecs \u7684 dirty page \u4f1a\u88ab\u5468\u671f\u6027\u5237\u76d8\u64cd\u4f5c\u5199\u4f1a\u78c1\u76d8\uff08\u9ed8\u8ba4 30\u79d2\uff09 vm.dirty_expire_centisecs = 3000 # \u591a\u957f\u65f6\u95f4\u5524\u9192\u4e00\u6b21\u5468\u671f\u6027\u7684\u5237\u76d8\u64cd\u4f5c\uff08\u9ed8\u8ba4 5\u79d2\uff09 vm.dirty_writeback_centisecs = 500 \u6e05\u9664 cache \u4ec5\u6e05\u9664\u9875\u9762\u7f13\u5b58\uff08PageCache\uff09 $ sync; echo 1 > /proc/sys/vm/drop_caches \u6e05\u9664\u76ee\u5f55\u9879\u548cinode $ sync; echo 2 > /proc/sys/vm/drop_caches \u6e05\u9664\u9875\u9762\u7f13\u5b58\uff0c\u76ee\u5f55\u9879\u548cinode $ sync; echo 3 > /proc/sys/vm/drop_caches \u5f53\u5185\u5b58\u5c0f\u4e8e 90G \u65f6\u81ea\u52a8\u6e05\u7406\uff1a #!/bin/bash # # /etc/cron.hourly/drop_caches.sh # free_mem = $( free -g | awk '/^Mem/ {print $4}' ) echo \" $( date + \"%Y-%m-%d-%T\" ) - before free_mem: $free_mem \" >> /root/drop_caches.log 2 > & 1 if [[ free_mem -lt 90 ]] ; then echo \" $( date + \"%Y-%m-%d-%T\" ) - drop caches\" >> /root/drop_caches.log 2 > & 1 sync ; echo 1 > /proc/sys/vm/drop_caches else echo \" $( date + \"%Y-%m-%d-%T\" ) - do nothing\" >> /root/drop_caches.log 2 > & 1 fi free_mem = $( free -g | awk '/^Mem/ {print $4}' ) echo \" $( date + \"%Y-%m-%d-%T\" ) - after free_mem: $free_mem \" >> /root/drop_caches.log 2 > & 1","title":"1.1 \u5185\u5b58"},{"location":"1-%E8%B4%9F%E8%BD%BD/1-memory/#11","text":"\u53c2\u8003\uff1ahttps://mapan1984.github.io/manual/2019/04/28/linux-\u8fd0\u7ef4\u95ee\u9898/#free-\u89e3\u91ca","title":"1.1 \u5185\u5b58"},{"location":"1-%E8%B4%9F%E8%BD%BD/1-memory/#free","text":"$ free -g total used free shared buffers cached Mem: 125 122 3 0 0 99 -/+ buffers/cache: 22 102 Swap: 0 0 0 total : \u603b\u5185\u5b58\u5927\u5c0f used : \u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58 free : \u7a7a\u95f2\u7684\u5185\u5b58 shared : \u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u5185\u5b58\u603b\u989d buffers : \u5757\u7f13\u5b58(buffer cache)\u5927\u5c0f\uff0c\u7f13\u5b58\u5757\u8bbe\u5907\u7684\u5757\u6570\u636e\uff08\u5982\u78c1\u76d8\uff09 cached : \u9875\u7f13\u5b58(page cache)\u5927\u5c0f\uff0c\u7f13\u5b58\u6587\u4ef6\u7684\u9875\u6570\u636e -buffers/cache : \u5df2\u7528\u7684\u5185\u5b58\u6570\uff0c\u4e0d\u5305\u542b\u78c1\u76d8\u7f13\u5b58\uff0c used - buffers - cached +buffers/cache : \u53ef\u7528\u7684\u5185\u5b58\u6570\uff0c\u5305\u542b\u78c1\u76d8\u7f13\u5b58\uff0c free + buffers + cached \u8fd9\u91cc\u7684 buffers , cached \u662f\u78c1\u76d8\u7f13\u5b58\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u4e5f\u53ef\u4ee5\u88ab\u8fdb\u7a0b\u7533\u8bf7\u5230\uff0c\u6240\u4ee5\u8ba1\u7b97\u53ef\u7528\u7684\u5185\u5b58\u65f6\uff0c\u5e94\u8be5\u7528 +buffers/cache \uff0c\u5373 free + buffers + cached \u5b9e\u9645\u88ab\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\uff0c\u5e94\u8be5\u53bb\u9664\u78c1\u76d8\u7f13\u5b58\uff0c\u5373 -buffers/cache \uff0c\u5373 used - buffers - cached \u5728 Linux 2.4 \u7248\u672c\u7684\u5185\u6838\u4e4b\u524d\uff0cpage cache \u4e0e buffer cache \u662f\u5b8c\u5168\u5206\u79bb\u7684\u3002\u4f46\u662f\uff0c\u5757\u8bbe\u5907\u5927\u591a\u662f\u78c1\u76d8\uff0c\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u53c8\u5927\u591a\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u6765\u7ec4\u7ec7\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u5bfc\u81f4\u5f88\u591a\u6570\u636e\u88ab\u7f13\u5b58\u4e86\u4e24\u6b21\uff0c\u6d6a\u8d39\u5185\u5b58\u3002\u6240\u4ee5\u5728 2.4 \u7248\u672c\u5185\u6838\u4e4b\u540e\uff0c\u4e24\u5757\u7f13\u5b58\u8fd1\u4f3c\u878d\u5408\u5728\u4e86\u4e00\u8d77\uff1a\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u7684\u9875\u52a0\u8f7d\u5230\u4e86 page cache\uff0c\u90a3\u4e48\u540c\u65f6 buffer cache \u53ea\u9700\u8981\u7ef4\u62a4\u5757\u6307\u5411\u9875\u7684\u6307\u9488\u5c31\u53ef\u4ee5\u4e86\u3002\u53ea\u6709\u90a3\u4e9b\u6ca1\u6709\u6587\u4ef6\u8868\u793a\u7684\u5757\uff0c\u6216\u8005\u7ed5\u8fc7\u4e86\u6587\u4ef6\u7cfb\u7edf\u76f4\u63a5\u64cd\u4f5c\uff08\u5982dd\u547d\u4ee4\uff09\u7684\u5757\uff0c\u624d\u4f1a\u771f\u6b63\u653e\u5230 buffer cache \u91cc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u63d0\u8d77 page cache\uff0c\u57fa\u672c\u4e0a\u90fd\u540c\u65f6\u6307 page cache \u548c buffer cache \u4e24\u8005\u3002","title":"free \u89e3\u91ca"},{"location":"1-%E8%B4%9F%E8%BD%BD/1-memory/#page_cache","text":"linux \u4f7f\u7528 page cache \u589e\u52a0\u5bf9\u78c1\u76d8\u8bbf\u95ee\u7684\u6027\u80fd\uff0cpage cache \u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u4e86\u78c1\u76d8\u4e0a\u7684\u90e8\u5206\u6570\u636e\u3002 \u5bf9\u8bfb\u8bf7\u6c42\uff0c\u7cfb\u7edf\u9996\u5148\u4f1a\u68c0\u67e5\u6240\u8bfb\u9875\u9762\u662f\u5426\u5728 cache \u4e2d: \u5982\u679c\u5728 cache \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee\u78c1\u76d8\u3002 \u5982\u679c\u4e0d\u5728 cache \u4e2d\uff0c\u90a3\u4e48\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6240\u8bf7\u6c42\u7684\u9875\u9762\uff0c\u5e76 \u9884\u8bfb \u51e0\u4e2a\u76f8\u90bb\u7684\u9875\u9762\uff08\u5c40\u90e8\u6027\u539f\u7406\uff09\uff0c\u7f13\u5b58\u5728 cache \u4e2d\u3002 \u5bf9\u5199\u8bf7\u6c42\uff0c\u6570\u636e\u76f4\u63a5\u5199\u5165 cache\uff0c\u78c1\u76d8\u5185\u5bb9\u4e0d\u4f1a\u76f4\u63a5\u66f4\u65b0\uff08\u65ad\u7535\u6709\u4e22\u5931\u6570\u636e\u98ce\u9669\uff09\u5199\u5165\u7684 page \u88ab\u6807\u8bb0\u4e3a dirty\uff0c\u5185\u6838\u4f1a\u5468\u671f\u7684\u5c06 dirty page \u5199\u56de \u78c1\u76d8\u3002 \u76f8\u5173\u53c2\u6570\uff1a # dirty page \u5927\u5c0f\u8fbe\u5230\u591a\u5c11\u5b57\u8282\u540e\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8 vm.dirty_background_bytes = 0 # dirty page \u5185\u5b58\u5360\u6bd4\u8d85\u8fc7 dirty_background_ratio \u540e\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8\uff08\u9ed8\u8ba4 10%\uff09 vm.dirty_background_ratio = 10 # dirty page \u5927\u5c0f\u8fbe\u5230\u591a\u5c11\u5b57\u8282\u540e\u505c\u6b62\u63a5\u6536\u5199\u8bf7\u6c42\uff0c\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8 vm.dirty_bytes = 0 # dirty page \u5185\u5b58\u5360\u6bd4\u8d85\u8fc7 dirty_ratio \u540e\u505c\u6b62\u63a5\u6536\u5199\u8bf7\u6c42\uff0c\u5f00\u59cb\u89e6\u53d1\u5237\u78c1\u76d8\uff08\u9ed8\u8ba4 30%\uff09 vm.dirty_ratio = 30 # \u5b58\u5728\u65f6\u95f4\u8d85\u8fc7 dirty_expire_centisecs \u7684 dirty page \u4f1a\u88ab\u5468\u671f\u6027\u5237\u76d8\u64cd\u4f5c\u5199\u4f1a\u78c1\u76d8\uff08\u9ed8\u8ba4 30\u79d2\uff09 vm.dirty_expire_centisecs = 3000 # \u591a\u957f\u65f6\u95f4\u5524\u9192\u4e00\u6b21\u5468\u671f\u6027\u7684\u5237\u76d8\u64cd\u4f5c\uff08\u9ed8\u8ba4 5\u79d2\uff09 vm.dirty_writeback_centisecs = 500","title":"page_cache"},{"location":"1-%E8%B4%9F%E8%BD%BD/1-memory/#cache","text":"\u4ec5\u6e05\u9664\u9875\u9762\u7f13\u5b58\uff08PageCache\uff09 $ sync; echo 1 > /proc/sys/vm/drop_caches \u6e05\u9664\u76ee\u5f55\u9879\u548cinode $ sync; echo 2 > /proc/sys/vm/drop_caches \u6e05\u9664\u9875\u9762\u7f13\u5b58\uff0c\u76ee\u5f55\u9879\u548cinode $ sync; echo 3 > /proc/sys/vm/drop_caches \u5f53\u5185\u5b58\u5c0f\u4e8e 90G \u65f6\u81ea\u52a8\u6e05\u7406\uff1a #!/bin/bash # # /etc/cron.hourly/drop_caches.sh # free_mem = $( free -g | awk '/^Mem/ {print $4}' ) echo \" $( date + \"%Y-%m-%d-%T\" ) - before free_mem: $free_mem \" >> /root/drop_caches.log 2 > & 1 if [[ free_mem -lt 90 ]] ; then echo \" $( date + \"%Y-%m-%d-%T\" ) - drop caches\" >> /root/drop_caches.log 2 > & 1 sync ; echo 1 > /proc/sys/vm/drop_caches else echo \" $( date + \"%Y-%m-%d-%T\" ) - do nothing\" >> /root/drop_caches.log 2 > & 1 fi free_mem = $( free -g | awk '/^Mem/ {print $4}' ) echo \" $( date + \"%Y-%m-%d-%T\" ) - after free_mem: $free_mem \" >> /root/drop_caches.log 2 > & 1","title":"\u6e05\u9664 cache"},{"location":"1-%E8%B4%9F%E8%BD%BD/2-cpu/","text":"1.2 CPU top \u8f93\u51fa\u89e3\u91ca load average: 7.59, 6.63, 4.27 \u8868\u793a\u7cfb\u7edf\u5728 1, 5, 15 \u5206\u949f\u5185\u7684\u5e73\u5747\u5de5\u4f5c\u8d1f\u8f7d\u5206\u522b\u4e3a 7.59, 6.63, 4.27\u3002cpu \u5de5\u4f5c\u8d1f\u8f7d\u662f\u6307\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u6b63\u5728\u4f7f\u7528\u548c\u7b49\u5f85\u4f7f\u7528 cpu \u7684\u5e73\u5747\u4efb\u52a1\u6570\u3002 %Cpu(s): 15.9 us, 13.7 sy, 0.0 ni, 63.3 id, 0.3 wa, 0.0 hi, 6.8 si, 0.0 st us, user: \u82b1\u5728 userland \u7684 cpu \u65f6\u95f4\u767e\u5206\u6bd4 sy, system: \u82b1\u5728 kernel \u7684 cpu \u65f6\u95f4\u767e\u5206\u6bd4 ni, nice: \u6539\u53d8\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u5360\u7528 cpu \u65f6\u95f4\u767e\u5206\u6bd4 id, idle: cpu \u6ca1\u6709\u5904\u7406\u4efb\u4f55\u4e8b\u7684\u65f6\u95f4\u767e\u5206\u6bd4 wa, iowait: cpu \u7a7a\u95f2\u5e76\u4e14\u540c\u65f6\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\uff0c\u5360\u7528 cpu \u65f6\u95f4\u7684\u767e\u5206\u6bd4 cpu \u7a7a\u95f2\u4e0d\u4e00\u5b9a\u662f\u56e0\u4e3a\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85 io\uff0c\u8fdb\u7a0b\u4f11\u7720\u8fd8\u53ef\u80fd\u662f\u56e0\u4e3a\u7b49\u5f85\u5b9a\u65f6\u5668\u3001\u7b49\u5f85\u952e\u76d8\u8f93\u5165\u7b49\u7b49\u539f\u56e0\uff0c\u4f46\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\u610f\u5473\u7740\u786e\u5b9e\u6709\u8fdb\u7a0b\u5728\u7b49\u5f85 io \u56e0\u4e3a \u300c\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\u300d\u548c \u300ccpu \u7a7a\u95f2\u300d\u4e0d\u662f\u660e\u786e\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u6240\u4ee5\u51fa\u73b0 iowait \u5347\u9ad8\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u51fa\u73b0 io \u74f6\u9888\uff0c\u8fd8\u9700\u8981\u6839\u636e io \u76f8\u5173\u7684\u76d1\u63a7\u4e00\u8d77\u5224\u65ad \u4f46\u662f\u5982\u679c\u673a\u5668\u4e0a\u7684\u8fdb\u7a0b\u5f88\u5c11\uff0c\u53ea\u6709\u4e00\u4e2a\u6d88\u8017 cpu \u548c io \u8d1f\u8f7d\u7684\u8fdb\u7a0b\uff0c\u90a3\u4e48\u51fa\u73b0 iowait \u5347\u9ad8\uff0c\u5f88\u53ef\u80fd\u662f\u8be5\u8fdb\u7a0b\u51fa\u73b0 io \u74f6\u9888 hi si st \u8fdb\u7a0b\u5217\u8868\u6bcf\u9879\u542b\u4e49\uff1a PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND VIRT \uff1avirtual memory usage \u865a\u62df\u5185\u5b58 \u8fdb\u7a0b \u9700\u8981\u7684 \u865a\u62df\u5185\u5b58\u5927\u5c0f\uff0c\u5305\u62ec\u8fdb\u7a0b\u4f7f\u7528\u7684\u5e93\u3001\u4ee3\u7801\u3001\u6570\u636e\u7b49 \u5047\u5982\u8fdb\u7a0b\u7533\u8bf7 100m \u7684\u5185\u5b58\uff0c\u4f46\u5b9e\u9645\u53ea\u4f7f\u7528\u4e86 10m\uff0c\u90a3\u4e48\u5b83\u4f1a\u589e\u957f 100m\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u4f7f\u7528\u91cf RES \uff1aresident memory usage \u5e38\u9a7b\u5185\u5b58 \u8fdb\u7a0b\u5f53\u524d\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u4f46\u4e0d\u5305\u62ec swap out \u5305\u542b\u5176\u4ed6\u8fdb\u7a0b\u7684\u5171\u4eab \u5982\u679c\u7533\u8bf7 100m \u7684\u5185\u5b58\uff0c\u5b9e\u9645\u4f7f\u7528 10m\uff0c\u5b83\u53ea\u589e\u957f 10m\uff0c\u4e0e VIRT \u76f8\u53cd \u5173\u4e8e\u5e93\u5360\u7528\u5185\u5b58\u7684\u60c5\u51b5\uff0c\u5b83\u53ea\u7edf\u8ba1\u52a0\u8f7d\u7684\u5e93\u6587\u4ef6\u6240\u5360\u5185\u5b58\u5927\u5c0f SHR \uff1ashared memory \u5171\u4eab\u5185\u5b58 \u9664\u4e86\u81ea\u8eab\u8fdb\u7a0b\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u5305\u62ec\u5176\u4ed6\u8fdb\u7a0b\u7684\u5171\u4eab\u5185\u5b58 \u867d\u7136\u8fdb\u7a0b\u53ea\u4f7f\u7528\u4e86\u51e0\u4e2a\u5171\u4eab\u5e93\u7684\u51fd\u6570\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u6574\u4e2a\u5171\u4eab\u5e93\u7684\u5927\u5c0f \u8ba1\u7b97\u67d0\u4e2a\u8fdb\u7a0b\u6240\u5360\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\u516c\u5f0f\uff1aRES \u2013 SHR swap out \u540e\uff0c\u5b83\u5c06\u4f1a\u964d\u4e0b\u6765 \u53c2\u8003\uff1a \u7406\u89e3 IOWAIT: http://linuxperf.com/?p=33","title":"1.2 cpu"},{"location":"1-%E8%B4%9F%E8%BD%BD/2-cpu/#12-cpu","text":"","title":"1.2 CPU"},{"location":"1-%E8%B4%9F%E8%BD%BD/2-cpu/#top","text":"load average: 7.59, 6.63, 4.27 \u8868\u793a\u7cfb\u7edf\u5728 1, 5, 15 \u5206\u949f\u5185\u7684\u5e73\u5747\u5de5\u4f5c\u8d1f\u8f7d\u5206\u522b\u4e3a 7.59, 6.63, 4.27\u3002cpu \u5de5\u4f5c\u8d1f\u8f7d\u662f\u6307\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u6b63\u5728\u4f7f\u7528\u548c\u7b49\u5f85\u4f7f\u7528 cpu \u7684\u5e73\u5747\u4efb\u52a1\u6570\u3002 %Cpu(s): 15.9 us, 13.7 sy, 0.0 ni, 63.3 id, 0.3 wa, 0.0 hi, 6.8 si, 0.0 st us, user: \u82b1\u5728 userland \u7684 cpu \u65f6\u95f4\u767e\u5206\u6bd4 sy, system: \u82b1\u5728 kernel \u7684 cpu \u65f6\u95f4\u767e\u5206\u6bd4 ni, nice: \u6539\u53d8\u8fc7\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u5360\u7528 cpu \u65f6\u95f4\u767e\u5206\u6bd4 id, idle: cpu \u6ca1\u6709\u5904\u7406\u4efb\u4f55\u4e8b\u7684\u65f6\u95f4\u767e\u5206\u6bd4 wa, iowait: cpu \u7a7a\u95f2\u5e76\u4e14\u540c\u65f6\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\uff0c\u5360\u7528 cpu \u65f6\u95f4\u7684\u767e\u5206\u6bd4 cpu \u7a7a\u95f2\u4e0d\u4e00\u5b9a\u662f\u56e0\u4e3a\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85 io\uff0c\u8fdb\u7a0b\u4f11\u7720\u8fd8\u53ef\u80fd\u662f\u56e0\u4e3a\u7b49\u5f85\u5b9a\u65f6\u5668\u3001\u7b49\u5f85\u952e\u76d8\u8f93\u5165\u7b49\u7b49\u539f\u56e0\uff0c\u4f46\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\u610f\u5473\u7740\u786e\u5b9e\u6709\u8fdb\u7a0b\u5728\u7b49\u5f85 io \u56e0\u4e3a \u300c\u6709\u672a\u5b8c\u6210\u7684 io \u8bf7\u6c42\u300d\u548c \u300ccpu \u7a7a\u95f2\u300d\u4e0d\u662f\u660e\u786e\u7684\u56e0\u679c\u5173\u7cfb\uff0c\u6240\u4ee5\u51fa\u73b0 iowait \u5347\u9ad8\u65f6\uff0c\u4e0d\u4e00\u5b9a\u662f\u51fa\u73b0 io \u74f6\u9888\uff0c\u8fd8\u9700\u8981\u6839\u636e io \u76f8\u5173\u7684\u76d1\u63a7\u4e00\u8d77\u5224\u65ad \u4f46\u662f\u5982\u679c\u673a\u5668\u4e0a\u7684\u8fdb\u7a0b\u5f88\u5c11\uff0c\u53ea\u6709\u4e00\u4e2a\u6d88\u8017 cpu \u548c io \u8d1f\u8f7d\u7684\u8fdb\u7a0b\uff0c\u90a3\u4e48\u51fa\u73b0 iowait \u5347\u9ad8\uff0c\u5f88\u53ef\u80fd\u662f\u8be5\u8fdb\u7a0b\u51fa\u73b0 io \u74f6\u9888 hi si st \u8fdb\u7a0b\u5217\u8868\u6bcf\u9879\u542b\u4e49\uff1a PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND VIRT \uff1avirtual memory usage \u865a\u62df\u5185\u5b58 \u8fdb\u7a0b \u9700\u8981\u7684 \u865a\u62df\u5185\u5b58\u5927\u5c0f\uff0c\u5305\u62ec\u8fdb\u7a0b\u4f7f\u7528\u7684\u5e93\u3001\u4ee3\u7801\u3001\u6570\u636e\u7b49 \u5047\u5982\u8fdb\u7a0b\u7533\u8bf7 100m \u7684\u5185\u5b58\uff0c\u4f46\u5b9e\u9645\u53ea\u4f7f\u7528\u4e86 10m\uff0c\u90a3\u4e48\u5b83\u4f1a\u589e\u957f 100m\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u4f7f\u7528\u91cf RES \uff1aresident memory usage \u5e38\u9a7b\u5185\u5b58 \u8fdb\u7a0b\u5f53\u524d\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u4f46\u4e0d\u5305\u62ec swap out \u5305\u542b\u5176\u4ed6\u8fdb\u7a0b\u7684\u5171\u4eab \u5982\u679c\u7533\u8bf7 100m \u7684\u5185\u5b58\uff0c\u5b9e\u9645\u4f7f\u7528 10m\uff0c\u5b83\u53ea\u589e\u957f 10m\uff0c\u4e0e VIRT \u76f8\u53cd \u5173\u4e8e\u5e93\u5360\u7528\u5185\u5b58\u7684\u60c5\u51b5\uff0c\u5b83\u53ea\u7edf\u8ba1\u52a0\u8f7d\u7684\u5e93\u6587\u4ef6\u6240\u5360\u5185\u5b58\u5927\u5c0f SHR \uff1ashared memory \u5171\u4eab\u5185\u5b58 \u9664\u4e86\u81ea\u8eab\u8fdb\u7a0b\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u5305\u62ec\u5176\u4ed6\u8fdb\u7a0b\u7684\u5171\u4eab\u5185\u5b58 \u867d\u7136\u8fdb\u7a0b\u53ea\u4f7f\u7528\u4e86\u51e0\u4e2a\u5171\u4eab\u5e93\u7684\u51fd\u6570\uff0c\u4f46\u5b83\u5305\u542b\u4e86\u6574\u4e2a\u5171\u4eab\u5e93\u7684\u5927\u5c0f \u8ba1\u7b97\u67d0\u4e2a\u8fdb\u7a0b\u6240\u5360\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\u516c\u5f0f\uff1aRES \u2013 SHR swap out \u540e\uff0c\u5b83\u5c06\u4f1a\u964d\u4e0b\u6765","title":"top \u8f93\u51fa\u89e3\u91ca"},{"location":"1-%E8%B4%9F%E8%BD%BD/2-cpu/#_1","text":"\u7406\u89e3 IOWAIT: http://linuxperf.com/?p=33","title":"\u53c2\u8003\uff1a"},{"location":"1-%E8%B4%9F%E8%BD%BD/3-disk/","text":"1.3 \u78c1\u76d8 iostat \u4f7f\u7528 \u4f7f\u7528\uff1a iostat [ options ] [ <interval> [ <count> ] ] \u6bd4\u5982\u95f4\u9694 2 \u6bcf\u79d2\u5c55\u793a\u4e00\u6b21\u7edf\u8ba1\u6570\u636e\uff0c\u603b\u5171\u5c55\u793a 20 \u6b21\uff1a iostat -x -p 2 20 \u53c2\u6570 options \u4e0e\u542b\u4e49\uff1a -x \u663e\u793a\u8be6\u7ec6\u4fe1\u606f -p[\u78c1\u76d8] \u663e\u793a\u78c1\u76d8\u548c\u5206\u533a\u7684\u60c5\u51b5 -C \u663e\u793aCPU\u4f7f\u7528\u60c5\u51b5 -d \u663e\u793a\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5 -k \u4ee5 KB \u4e3a\u5355\u4f4d\u663e\u793a -m \u4ee5 M \u4e3a\u5355\u4f4d\u663e\u793a -N \u663e\u793a\u78c1\u76d8\u9635\u5217(LVM) \u4fe1\u606f -t \u663e\u793a\u7ec8\u7aef\u548cCPU\u7684\u4fe1\u606f -V \u663e\u793a\u7248\u672c\u4fe1\u606f rrqm/s \u548c wrqm/s (read request merged, write request merged)\uff1a\u6bcf\u79d2\u5408\u5e76\u7684\u8bfb\u548c\u5199\u8bf7\u6c42\u3002\u5982\u679c\u8bf7\u6c42\u961f\u5217\u4e2d\u591a\u4e2a\u903b\u8f91\u8bf7\u6c42\u7684\u5730\u5740\u4f4d\u4e8e\u76f8\u90bb/\u540c\u4e00\u4e2a\u5757\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e9b\u8bf7\u6c42\u5408\u5e76\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5230\u5b9e\u9645\u78c1\u76d8\u3002\u4e00\u822c\u987a\u5e8f\u8bbf\u95ee\u76f8\u6bd4\u968f\u673a\u8bbf\u95ee\u4f1a\u51fa\u73b0\u66f4\u591a\u7684\u5408\u5e76\u6570 r/s \uff1a\u6bcf\u79d2\u53d1\u9001\u5230\u8bbe\u5907\u7684\u8bfb\u8bf7\u6c42\u6570\uff08\u5408\u5e76\u4e4b\u540e\u7684\u6570\u503c\uff09 w/s \uff1a\u6bcf\u79d2\u53d1\u9001\u5230\u8bbe\u5907\u7684\u5199\u8bf7\u6c42\u6570\uff08\u5408\u5e76\u4e4b\u540e\u7684\u6570\u503c\uff09 rkB/s : \u6bcf\u79d2\u8bfb\u6570\u636e\u91cf(kB\u4e3a\u5355\u4f4d) wkB/s : \u6bcf\u79d2\u5199\u6570\u636e\u91cf(kB\u4e3a\u5355\u4f4d) rsec/s \u548c wsec/s \uff1a\u6bcf\u79d2\u8bfb\u548c\u5199\u7684\u6247\u533a\u6570\uff08\u6bcf\u6247\u533a\u5927\u5c0f\u4e3a512\u5b57\u8282\uff09 avgrq\u2013sz \uff1a\u5e73\u5747\u6bcf\u6b21 IO \u8bf7\u6c42\u7684\u6247\u533a\u6570 avgqu\u2013sz \uff1a\u5e73\u5747\u5728\u8bbe\u5907\u961f\u5217\u4e2d\u7b49\u5f85\u7684 IO \u8bf7\u6c42\u6570 await \uff1a\u5e73\u5747\u6bcf\u4e2a IO \u8bf7\u6c42\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u7b49\u5f85\u65f6\u95f4\u4e0e\u5904\u7406\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a ms\uff09 r_await \u548c w_await : \u5e73\u5747\u6bcf\u4e2a IO \u8bfb\u8bf7\u6c42\u4e0e\u5199\u8bf7\u6c42\u7684\u6240\u82b1\u8d39\u7684\u65f6\u95f4 svctm \uff1a\u5e73\u5747\u6bcf\u4e2a IO \u8bf7\u6c42\uff08\u670d\u52a1\uff09\u5904\u7406\u65f6\u95f4 \u8fd9\u9879\u6307\u6807\u4e0d\u53ef\u4fe1\uff0c\u5c06\u88ab\u5e9f\u5f03 %util \uff1a\u91c7\u96c6\u5468\u671f\u5185\u6709 IO \u5904\u7406\u7684\u65f6\u95f4\u6bd4\u7387\uff0c\u5373 IO \u961f\u5217\u975e\u7a7a\u7684\u65f6\u95f4\u6bd4\u7387\u3002\u8fd9\u91cc\u6709 IO \u5904\u7406\u6ca1\u6709\u8003\u8651 IO \u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\uff0c\u4f46\u662f\u4e00\u822c\u5757\u8bbe\u5907\u53ef\u4ee5\u5e76\u53d1\u5904\u7406\u8bf7\u6c42\uff0c\u6240\u4ee5\u5355\u7eaf\u770b\u8fd9\u4e2a\u503c\u5e76\u4e0d\u80fd\u8bf4\u660e\u8bbe\u5907\u5904\u7406\u662f\u5426\u9971\u548c \u6ce8\u610f\uff1aiostat \u4ece /proc/diskstats \u8ba1\u7b97\u5f97\u5230\u5c55\u793a\u6570\uff0c/proc/diskstats \u63d0\u4f9b\u7684\u662f\u7d2f\u8ba1\u503c\uff0c\u5c55\u793a\u7684\u6570\u636e\u9700\u8981\u8ba1\u7b97\u65f6\u95f4\u95f4\u9694\u524d\u540e\u7684\u53d8\u5316\uff0c\u6240\u4ee5 iostat \u9996\u6b21\u8fd0\u884c\u65f6\u663e\u793a\u81ea\u7cfb\u7edf\u542f\u52a8\u5f00\u59cb\u7684\u5404\u9879\u7edf\u8ba1\u4fe1\u606f\uff0c\u4e4b\u540e\u8fd0\u884c iostat \u5c06\u663e\u793a\u81ea\u4e0a\u6b21\u8fd0\u884c\u8be5\u547d\u4ee4\u4ee5\u540e\u7684\u7edf\u8ba1\u4fe1\u606f util = (r/s+w/s) * (svctm/1000) \u5e38\u89c1 linux \u7684\u78c1\u76d8 IO \u6307\u6807\u7684\u7f29\u5199\u4e60\u60ef\uff1a rq \u662f request r \u662f read w \u662f write qu \u662f queue sz \u662f size a \u662f average tm \u662f time svc \u662f service\u3002 /proc/diskstats $ cat /proc/diskstats 8 0 sda 284582428 3662549 46775621561 463232949 331115798 379042858 23932284589 1218204980 0 1137934235 1949683834 1 2 3 4 5 6 7 8 9 10 11 8 1 sda1 22 0 176 248 0 0 0 0 0 256 256 8 2 sda2 31919620 529912 1308796698 168580225 3802763 484906 37468832 3650707 0 102423621 187605638 8 3 sda3 1903036 20859 112724155 11083792 7317913 295559 67078769 7332650 0 14976486 23037140 8 4 sda4 19758029 135050 2122710340 29034910 78120710 6565898 1001751842 54812811 0 81205754 132614573 /proc/diskstats \u6709 11 \u4e2a\u5b57\u6bb5\uff0c\u9664\u4e86\u5b57\u6bb5 #9 \u4e4b\u5916\u90fd\u662f\u7d2f\u8ba1\u503c\uff0c\u4ece\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u4e00\u76f4\u7d2f\u52a0\uff1a (rd_ios)\u8bfb\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (rd_merges)\u5408\u5e76\u8bfb\u64cd\u4f5c\u7684\u6b21\u6570\u3002\u5982\u679c\u4e24\u4e2a\u8bfb\u64cd\u4f5c\u8bfb\u53d6\u76f8\u90bb\u7684\u6570\u636e\u5757\u65f6\uff0c\u53ef\u4ee5\u88ab\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u3002\u5408\u5e76\u7684\u64cd\u4f5c\u901a\u5e38\u662fI/O scheduler\uff08\u4e5f\u53ebelevator\uff09\u8d1f\u8d23\u7684\u3002 (rd_sectors)\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf\u3002 (rd_ticks)\u8bfb\u64cd\u4f5c\u6d88\u8017\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u4ece__make_request()\u5f00\u59cb\u8ba1\u65f6\uff0c\u5230end_that_request_last()\u4e3a\u6b62\uff0c\u5305\u62ec\u4e86\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 (wr_ios)\u5199\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (wr_merges)\u5408\u5e76\u5199\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (wr_sectors)\u5199\u5165\u7684\u6247\u533a\u6570\u91cf\u3002 (wr_ticks)\u5199\u64cd\u4f5c\u6d88\u8017\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 (in_flight)\u5f53\u524d\u672a\u5b8c\u6210\u7684I/O\u6570\u91cf\u3002\u5728I/O\u8bf7\u6c42\u8fdb\u5165\u961f\u5217\u65f6\u8be5\u503c\u52a01\uff0c\u5728I/O\u7ed3\u675f\u65f6\u8be5\u503c\u51cf1\u3002\u6ce8\u610f\uff1a\u662fI/O\u8bf7\u6c42\u8fdb\u5165\u961f\u5217\u65f6\uff0c\u800c\u4e0d\u662f\u63d0\u4ea4\u7ed9\u786c\u76d8\u8bbe\u5907\u65f6\u3002 (io_ticks)\u8be5\u8bbe\u5907\u7528\u4e8e\u5904\u7406I/O\u7684\u81ea\u7136\u65f6\u95f4(wall-clock time)\u3002 \u8bf7\u6ce8\u610fio_ticks\u4e0erd_ticks(\u5b57\u6bb5#4)\u548cwr_ticks(\u5b57\u6bb5#8)\u7684\u533a\u522b\uff0crd_ticks\u548cwr_ticks\u662f\u628a\u6bcf\u4e00\u4e2aI/O\u6240\u6d88\u8017\u7684\u65f6\u95f4\u7d2f\u52a0\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u786c\u76d8\u8bbe\u5907\u901a\u5e38\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u591a\u4e2aI/O\uff0c\u6240\u4ee5rd_ticks\u548cwr_ticks\u5f80\u5f80\u4f1a\u6bd4\u81ea\u7136\u65f6\u95f4\u5927\u3002\u800cio_ticks\u8868\u793a\u8be5\u8bbe\u5907\u6709I/O\uff08\u5373\u975e\u7a7a\u95f2\uff09\u7684\u65f6\u95f4\uff0c\u4e0d\u8003\u8651I/O\u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\u3002\u5728\u5b9e\u9645\u8ba1\u7b97\u65f6\uff0c\u5b57\u6bb5#9(in_flight)\u4e0d\u4e3a\u96f6\u7684\u65f6\u5019io_ticks\u4fdd\u6301\u8ba1\u65f6\uff0c\u5b57\u6bb5#9(in_flight)\u4e3a\u96f6\u7684\u65f6\u5019io_ticks\u505c\u6b62\u8ba1\u65f6\u3002 (time_in_queue)\u5bf9\u5b57\u6bb5#10(io_ticks)\u7684\u52a0\u6743\u503c\u3002\u5b57\u6bb5#10(io_ticks)\u662f\u81ea\u7136\u65f6\u95f4\uff0c\u4e0d\u8003\u8651\u5f53\u524d\u6709\u51e0\u4e2aI/O\uff0c\u800ctime_in_queue\u662f\u7528\u5f53\u524d\u7684I/O\u6570\u91cf\uff08\u5373\u5b57\u6bb5#9 in-flight\uff09\u4e58\u4ee5\u81ea\u7136\u65f6\u95f4\u3002\u867d\u7136\u8be5\u5b57\u6bb5\u7684\u540d\u79f0\u662ftime_in_queue\uff0c\u4f46\u5e76\u4e0d\u771f\u7684\u53ea\u662f\u5728\u961f\u5217\u4e2d\u7684\u65f6\u95f4\uff0c\u5176\u4e2d\u8fd8\u5305\u542b\u4e86\u786c\u76d8\u5904\u7406I/O\u7684\u65f6\u95f4\u3002iostat\u5728\u8ba1\u7b97avgqu-sz\u65f6\u4f1a\u7528\u5230\u8fd9\u4e2a\u5b57\u6bb5\u3002 \u76d1\u63a7\u9879\uff1a \u6bcf\u79d2\u8bfb io \u6b21\u6570\uff1ar/s = \u0394rd_ios/\u0394t \u6bcf\u79d2\u5199 io \u6b21\u6570\uff1aw/s = \u0394wr_ios/\u0394t \u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u5e73\u5747\u6240\u9700\u7684\u65f6\u95f4: r_await = \u0394rd_ticks/\u0394rd_ios > \u4e0d\u4ec5\u5305\u62ec\u786c\u76d8\u8bbe\u5907\u8bfb\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u8fd8\u5305\u62ec\u4e86\u5728kernel\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u6bcf\u4e2a\u5199\u64cd\u4f5c\u5e73\u5747\u6240\u9700\u7684\u65f6\u95f4: w_await = \u0394wr_ticks/\u0394wr_ios > \u4e0d\u4ec5\u5305\u62ec\u786c\u76d8\u8bbe\u5907\u5199\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u8fd8\u5305\u62ec\u4e86\u5728kernel\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u8be5\u786c\u76d8\u8bbe\u5907\u7684\u7e41\u5fd9\u6bd4\u7387: %util = \u0394io_ticks/\u0394t > \u8868\u793a\u8be5\u8bbe\u5907\u6709I/O\uff08\u5373\u975e\u7a7a\u95f2\uff09\u7684\u65f6\u95f4\u6bd4\u7387\uff0c\u4e0d\u8003\u8651I/O\u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\u3002 \u53c2\u8003 \u5bb9\u6613\u88ab\u8bef\u8bfb\u7684IOSTAT: http://linuxperf.com/?p=156 https://blog.csdn.net/MrSate/article/details/104421383 https://tech.meituan.com/2017/05/19/about-desk-io.html","title":"1.3 \u78c1\u76d8"},{"location":"1-%E8%B4%9F%E8%BD%BD/3-disk/#13","text":"","title":"1.3 \u78c1\u76d8"},{"location":"1-%E8%B4%9F%E8%BD%BD/3-disk/#iostat","text":"\u4f7f\u7528\uff1a iostat [ options ] [ <interval> [ <count> ] ] \u6bd4\u5982\u95f4\u9694 2 \u6bcf\u79d2\u5c55\u793a\u4e00\u6b21\u7edf\u8ba1\u6570\u636e\uff0c\u603b\u5171\u5c55\u793a 20 \u6b21\uff1a iostat -x -p 2 20 \u53c2\u6570 options \u4e0e\u542b\u4e49\uff1a -x \u663e\u793a\u8be6\u7ec6\u4fe1\u606f -p[\u78c1\u76d8] \u663e\u793a\u78c1\u76d8\u548c\u5206\u533a\u7684\u60c5\u51b5 -C \u663e\u793aCPU\u4f7f\u7528\u60c5\u51b5 -d \u663e\u793a\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5 -k \u4ee5 KB \u4e3a\u5355\u4f4d\u663e\u793a -m \u4ee5 M \u4e3a\u5355\u4f4d\u663e\u793a -N \u663e\u793a\u78c1\u76d8\u9635\u5217(LVM) \u4fe1\u606f -t \u663e\u793a\u7ec8\u7aef\u548cCPU\u7684\u4fe1\u606f -V \u663e\u793a\u7248\u672c\u4fe1\u606f rrqm/s \u548c wrqm/s (read request merged, write request merged)\uff1a\u6bcf\u79d2\u5408\u5e76\u7684\u8bfb\u548c\u5199\u8bf7\u6c42\u3002\u5982\u679c\u8bf7\u6c42\u961f\u5217\u4e2d\u591a\u4e2a\u903b\u8f91\u8bf7\u6c42\u7684\u5730\u5740\u4f4d\u4e8e\u76f8\u90bb/\u540c\u4e00\u4e2a\u5757\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e9b\u8bf7\u6c42\u5408\u5e76\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5230\u5b9e\u9645\u78c1\u76d8\u3002\u4e00\u822c\u987a\u5e8f\u8bbf\u95ee\u76f8\u6bd4\u968f\u673a\u8bbf\u95ee\u4f1a\u51fa\u73b0\u66f4\u591a\u7684\u5408\u5e76\u6570 r/s \uff1a\u6bcf\u79d2\u53d1\u9001\u5230\u8bbe\u5907\u7684\u8bfb\u8bf7\u6c42\u6570\uff08\u5408\u5e76\u4e4b\u540e\u7684\u6570\u503c\uff09 w/s \uff1a\u6bcf\u79d2\u53d1\u9001\u5230\u8bbe\u5907\u7684\u5199\u8bf7\u6c42\u6570\uff08\u5408\u5e76\u4e4b\u540e\u7684\u6570\u503c\uff09 rkB/s : \u6bcf\u79d2\u8bfb\u6570\u636e\u91cf(kB\u4e3a\u5355\u4f4d) wkB/s : \u6bcf\u79d2\u5199\u6570\u636e\u91cf(kB\u4e3a\u5355\u4f4d) rsec/s \u548c wsec/s \uff1a\u6bcf\u79d2\u8bfb\u548c\u5199\u7684\u6247\u533a\u6570\uff08\u6bcf\u6247\u533a\u5927\u5c0f\u4e3a512\u5b57\u8282\uff09 avgrq\u2013sz \uff1a\u5e73\u5747\u6bcf\u6b21 IO \u8bf7\u6c42\u7684\u6247\u533a\u6570 avgqu\u2013sz \uff1a\u5e73\u5747\u5728\u8bbe\u5907\u961f\u5217\u4e2d\u7b49\u5f85\u7684 IO \u8bf7\u6c42\u6570 await \uff1a\u5e73\u5747\u6bcf\u4e2a IO \u8bf7\u6c42\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u7b49\u5f85\u65f6\u95f4\u4e0e\u5904\u7406\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a ms\uff09 r_await \u548c w_await : \u5e73\u5747\u6bcf\u4e2a IO \u8bfb\u8bf7\u6c42\u4e0e\u5199\u8bf7\u6c42\u7684\u6240\u82b1\u8d39\u7684\u65f6\u95f4 svctm \uff1a\u5e73\u5747\u6bcf\u4e2a IO \u8bf7\u6c42\uff08\u670d\u52a1\uff09\u5904\u7406\u65f6\u95f4 \u8fd9\u9879\u6307\u6807\u4e0d\u53ef\u4fe1\uff0c\u5c06\u88ab\u5e9f\u5f03 %util \uff1a\u91c7\u96c6\u5468\u671f\u5185\u6709 IO \u5904\u7406\u7684\u65f6\u95f4\u6bd4\u7387\uff0c\u5373 IO \u961f\u5217\u975e\u7a7a\u7684\u65f6\u95f4\u6bd4\u7387\u3002\u8fd9\u91cc\u6709 IO \u5904\u7406\u6ca1\u6709\u8003\u8651 IO \u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\uff0c\u4f46\u662f\u4e00\u822c\u5757\u8bbe\u5907\u53ef\u4ee5\u5e76\u53d1\u5904\u7406\u8bf7\u6c42\uff0c\u6240\u4ee5\u5355\u7eaf\u770b\u8fd9\u4e2a\u503c\u5e76\u4e0d\u80fd\u8bf4\u660e\u8bbe\u5907\u5904\u7406\u662f\u5426\u9971\u548c \u6ce8\u610f\uff1aiostat \u4ece /proc/diskstats \u8ba1\u7b97\u5f97\u5230\u5c55\u793a\u6570\uff0c/proc/diskstats \u63d0\u4f9b\u7684\u662f\u7d2f\u8ba1\u503c\uff0c\u5c55\u793a\u7684\u6570\u636e\u9700\u8981\u8ba1\u7b97\u65f6\u95f4\u95f4\u9694\u524d\u540e\u7684\u53d8\u5316\uff0c\u6240\u4ee5 iostat \u9996\u6b21\u8fd0\u884c\u65f6\u663e\u793a\u81ea\u7cfb\u7edf\u542f\u52a8\u5f00\u59cb\u7684\u5404\u9879\u7edf\u8ba1\u4fe1\u606f\uff0c\u4e4b\u540e\u8fd0\u884c iostat \u5c06\u663e\u793a\u81ea\u4e0a\u6b21\u8fd0\u884c\u8be5\u547d\u4ee4\u4ee5\u540e\u7684\u7edf\u8ba1\u4fe1\u606f util = (r/s+w/s) * (svctm/1000) \u5e38\u89c1 linux \u7684\u78c1\u76d8 IO \u6307\u6807\u7684\u7f29\u5199\u4e60\u60ef\uff1a rq \u662f request r \u662f read w \u662f write qu \u662f queue sz \u662f size a \u662f average tm \u662f time svc \u662f service\u3002","title":"iostat \u4f7f\u7528"},{"location":"1-%E8%B4%9F%E8%BD%BD/3-disk/#procdiskstats","text":"$ cat /proc/diskstats 8 0 sda 284582428 3662549 46775621561 463232949 331115798 379042858 23932284589 1218204980 0 1137934235 1949683834 1 2 3 4 5 6 7 8 9 10 11 8 1 sda1 22 0 176 248 0 0 0 0 0 256 256 8 2 sda2 31919620 529912 1308796698 168580225 3802763 484906 37468832 3650707 0 102423621 187605638 8 3 sda3 1903036 20859 112724155 11083792 7317913 295559 67078769 7332650 0 14976486 23037140 8 4 sda4 19758029 135050 2122710340 29034910 78120710 6565898 1001751842 54812811 0 81205754 132614573 /proc/diskstats \u6709 11 \u4e2a\u5b57\u6bb5\uff0c\u9664\u4e86\u5b57\u6bb5 #9 \u4e4b\u5916\u90fd\u662f\u7d2f\u8ba1\u503c\uff0c\u4ece\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u4e00\u76f4\u7d2f\u52a0\uff1a (rd_ios)\u8bfb\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (rd_merges)\u5408\u5e76\u8bfb\u64cd\u4f5c\u7684\u6b21\u6570\u3002\u5982\u679c\u4e24\u4e2a\u8bfb\u64cd\u4f5c\u8bfb\u53d6\u76f8\u90bb\u7684\u6570\u636e\u5757\u65f6\uff0c\u53ef\u4ee5\u88ab\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u3002\u5408\u5e76\u7684\u64cd\u4f5c\u901a\u5e38\u662fI/O scheduler\uff08\u4e5f\u53ebelevator\uff09\u8d1f\u8d23\u7684\u3002 (rd_sectors)\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf\u3002 (rd_ticks)\u8bfb\u64cd\u4f5c\u6d88\u8017\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u4ece__make_request()\u5f00\u59cb\u8ba1\u65f6\uff0c\u5230end_that_request_last()\u4e3a\u6b62\uff0c\u5305\u62ec\u4e86\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 (wr_ios)\u5199\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (wr_merges)\u5408\u5e76\u5199\u64cd\u4f5c\u7684\u6b21\u6570\u3002 (wr_sectors)\u5199\u5165\u7684\u6247\u533a\u6570\u91cf\u3002 (wr_ticks)\u5199\u64cd\u4f5c\u6d88\u8017\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 (in_flight)\u5f53\u524d\u672a\u5b8c\u6210\u7684I/O\u6570\u91cf\u3002\u5728I/O\u8bf7\u6c42\u8fdb\u5165\u961f\u5217\u65f6\u8be5\u503c\u52a01\uff0c\u5728I/O\u7ed3\u675f\u65f6\u8be5\u503c\u51cf1\u3002\u6ce8\u610f\uff1a\u662fI/O\u8bf7\u6c42\u8fdb\u5165\u961f\u5217\u65f6\uff0c\u800c\u4e0d\u662f\u63d0\u4ea4\u7ed9\u786c\u76d8\u8bbe\u5907\u65f6\u3002 (io_ticks)\u8be5\u8bbe\u5907\u7528\u4e8e\u5904\u7406I/O\u7684\u81ea\u7136\u65f6\u95f4(wall-clock time)\u3002 \u8bf7\u6ce8\u610fio_ticks\u4e0erd_ticks(\u5b57\u6bb5#4)\u548cwr_ticks(\u5b57\u6bb5#8)\u7684\u533a\u522b\uff0crd_ticks\u548cwr_ticks\u662f\u628a\u6bcf\u4e00\u4e2aI/O\u6240\u6d88\u8017\u7684\u65f6\u95f4\u7d2f\u52a0\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u786c\u76d8\u8bbe\u5907\u901a\u5e38\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u591a\u4e2aI/O\uff0c\u6240\u4ee5rd_ticks\u548cwr_ticks\u5f80\u5f80\u4f1a\u6bd4\u81ea\u7136\u65f6\u95f4\u5927\u3002\u800cio_ticks\u8868\u793a\u8be5\u8bbe\u5907\u6709I/O\uff08\u5373\u975e\u7a7a\u95f2\uff09\u7684\u65f6\u95f4\uff0c\u4e0d\u8003\u8651I/O\u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\u3002\u5728\u5b9e\u9645\u8ba1\u7b97\u65f6\uff0c\u5b57\u6bb5#9(in_flight)\u4e0d\u4e3a\u96f6\u7684\u65f6\u5019io_ticks\u4fdd\u6301\u8ba1\u65f6\uff0c\u5b57\u6bb5#9(in_flight)\u4e3a\u96f6\u7684\u65f6\u5019io_ticks\u505c\u6b62\u8ba1\u65f6\u3002 (time_in_queue)\u5bf9\u5b57\u6bb5#10(io_ticks)\u7684\u52a0\u6743\u503c\u3002\u5b57\u6bb5#10(io_ticks)\u662f\u81ea\u7136\u65f6\u95f4\uff0c\u4e0d\u8003\u8651\u5f53\u524d\u6709\u51e0\u4e2aI/O\uff0c\u800ctime_in_queue\u662f\u7528\u5f53\u524d\u7684I/O\u6570\u91cf\uff08\u5373\u5b57\u6bb5#9 in-flight\uff09\u4e58\u4ee5\u81ea\u7136\u65f6\u95f4\u3002\u867d\u7136\u8be5\u5b57\u6bb5\u7684\u540d\u79f0\u662ftime_in_queue\uff0c\u4f46\u5e76\u4e0d\u771f\u7684\u53ea\u662f\u5728\u961f\u5217\u4e2d\u7684\u65f6\u95f4\uff0c\u5176\u4e2d\u8fd8\u5305\u542b\u4e86\u786c\u76d8\u5904\u7406I/O\u7684\u65f6\u95f4\u3002iostat\u5728\u8ba1\u7b97avgqu-sz\u65f6\u4f1a\u7528\u5230\u8fd9\u4e2a\u5b57\u6bb5\u3002 \u76d1\u63a7\u9879\uff1a \u6bcf\u79d2\u8bfb io \u6b21\u6570\uff1ar/s = \u0394rd_ios/\u0394t \u6bcf\u79d2\u5199 io \u6b21\u6570\uff1aw/s = \u0394wr_ios/\u0394t \u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u5e73\u5747\u6240\u9700\u7684\u65f6\u95f4: r_await = \u0394rd_ticks/\u0394rd_ios > \u4e0d\u4ec5\u5305\u62ec\u786c\u76d8\u8bbe\u5907\u8bfb\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u8fd8\u5305\u62ec\u4e86\u5728kernel\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u6bcf\u4e2a\u5199\u64cd\u4f5c\u5e73\u5747\u6240\u9700\u7684\u65f6\u95f4: w_await = \u0394wr_ticks/\u0394wr_ios > \u4e0d\u4ec5\u5305\u62ec\u786c\u76d8\u8bbe\u5907\u5199\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u8fd8\u5305\u62ec\u4e86\u5728kernel\u961f\u5217\u4e2d\u7b49\u5f85\u7684\u65f6\u95f4\u3002 \u8be5\u786c\u76d8\u8bbe\u5907\u7684\u7e41\u5fd9\u6bd4\u7387: %util = \u0394io_ticks/\u0394t > \u8868\u793a\u8be5\u8bbe\u5907\u6709I/O\uff08\u5373\u975e\u7a7a\u95f2\uff09\u7684\u65f6\u95f4\u6bd4\u7387\uff0c\u4e0d\u8003\u8651I/O\u6709\u591a\u5c11\uff0c\u53ea\u8003\u8651\u6709\u6ca1\u6709\u3002","title":"/proc/diskstats"},{"location":"1-%E8%B4%9F%E8%BD%BD/3-disk/#_1","text":"\u5bb9\u6613\u88ab\u8bef\u8bfb\u7684IOSTAT: http://linuxperf.com/?p=156 https://blog.csdn.net/MrSate/article/details/104421383 https://tech.meituan.com/2017/05/19/about-desk-io.html","title":"\u53c2\u8003"},{"location":"1-%E8%B4%9F%E8%BD%BD/4-net/","text":"1.4 \u7f51\u7edc netstat -s | grep -E 'overflow|drop' nstat -az | grep -E 'TcpExtListenOverflows|TcpExtListenDrops'","title":"1.4 \u7f51\u7edc"},{"location":"1-%E8%B4%9F%E8%BD%BD/4-net/#14","text":"netstat -s | grep -E 'overflow|drop' nstat -az | grep -E 'TcpExtListenOverflows|TcpExtListenDrops'","title":"1.4 \u7f51\u7edc"},{"location":"2-%E7%9B%91%E6%8E%A7/1-prometheus/","text":"2.1 Prometheus \u4e0b\u8f7d\u8fd0\u884c $ wget https://github.com/prometheus/prometheus/releases/download/v2.8.1/prometheus-2.8.1.linux-amd64.tar.gz $ tar zxvf prometheus-2.8.1.linux-amd64.tar.gz $ cd prometheus-2.8.1.linux-amd64/ $ ./prometheus --config.file=prometheus.yml $ curl http://localhost:9090 \u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u91c7\u96c6 prometheus \u670d\u52a1\u81ea\u8eab\u4fe1\u606f\uff1a # my global config global : scrape_interval : 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval : 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting : alertmanagers : - static_configs : - targets : # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files : # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs : # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name : 'prometheus' # metrics_path defaults to '/metrics' # scheme defaults to 'http'. static_configs : - targets : [ 'localhost:9090' ] \u8fd0\u884c\u53c2\u6570 \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u542f\u52a8\u53c2\u6570\u4fee\u6539\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\uff0c\u670d\u52a1\u7aef\u53e3\u7b49 $ ./prometheus --config.file=./prometheus.yml --storage.tsdb.path=/data/prometheus --web.listen-address=:8080 \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --storage.tsdb.path data/ tsdb \u6570\u636e\u5b58\u50a8\u4f4d\u7f6e --storage.tsdb.retention.time 15d tsdb \u6570\u636e\u4fdd\u7559\u65f6\u95f4(\u8fc7\u671f\u65f6\u95f4) --storage.tsdb.retention.size (EXPERIMENTAL) 0 tsdb \u6570\u636e\u4fdd\u7559\u5927\u5c0f \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --web.listen-address \u76d1\u542c\u5730\u5740 \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --storage.tsdb.min-block-duration 2h The timestamp range of head blocks after which they get persisted --storage.tsdb.max-block-duration 36h The maximum timestamp range of compacted blocks,It's the minimum duration of any persisted block. --storage.tsdb.no-lockfile false Do not create lockfile in data directory","title":"2.1 prometheus"},{"location":"2-%E7%9B%91%E6%8E%A7/1-prometheus/#21-prometheus","text":"","title":"2.1 Prometheus"},{"location":"2-%E7%9B%91%E6%8E%A7/1-prometheus/#_1","text":"$ wget https://github.com/prometheus/prometheus/releases/download/v2.8.1/prometheus-2.8.1.linux-amd64.tar.gz $ tar zxvf prometheus-2.8.1.linux-amd64.tar.gz $ cd prometheus-2.8.1.linux-amd64/ $ ./prometheus --config.file=prometheus.yml $ curl http://localhost:9090 \u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u91c7\u96c6 prometheus \u670d\u52a1\u81ea\u8eab\u4fe1\u606f\uff1a # my global config global : scrape_interval : 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval : 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting : alertmanagers : - static_configs : - targets : # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files : # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs : # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name : 'prometheus' # metrics_path defaults to '/metrics' # scheme defaults to 'http'. static_configs : - targets : [ 'localhost:9090' ]","title":"\u4e0b\u8f7d\u8fd0\u884c"},{"location":"2-%E7%9B%91%E6%8E%A7/1-prometheus/#_2","text":"\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u542f\u52a8\u53c2\u6570\u4fee\u6539\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\uff0c\u670d\u52a1\u7aef\u53e3\u7b49 $ ./prometheus --config.file=./prometheus.yml --storage.tsdb.path=/data/prometheus --web.listen-address=:8080 \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --storage.tsdb.path data/ tsdb \u6570\u636e\u5b58\u50a8\u4f4d\u7f6e --storage.tsdb.retention.time 15d tsdb \u6570\u636e\u4fdd\u7559\u65f6\u95f4(\u8fc7\u671f\u65f6\u95f4) --storage.tsdb.retention.size (EXPERIMENTAL) 0 tsdb \u6570\u636e\u4fdd\u7559\u5927\u5c0f \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --web.listen-address \u76d1\u542c\u5730\u5740 \u542f\u52a8\u53c2\u6570 \u9ed8\u8ba4\u503c \u542b\u4e49 --storage.tsdb.min-block-duration 2h The timestamp range of head blocks after which they get persisted --storage.tsdb.max-block-duration 36h The maximum timestamp range of compacted blocks,It's the minimum duration of any persisted block. --storage.tsdb.no-lockfile false Do not create lockfile in data directory","title":"\u8fd0\u884c\u53c2\u6570"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/","text":"2.2 PromQL \u76d1\u63a7\u6570\u636e\u6a21\u578b prometheus \u7684\u76d1\u63a7\u6570\u636e\u88ab\u7ec4\u7ec7\u4e3a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u6bcf\u4e00\u9879\u7531 metric name \u548c labels (key-value pairs) \u6807\u8bc6\uff0c\u683c\u5f0f\u4e3a\uff1a <metric name>{<label name>=<label value>, ...} <value> example: api_http_requests_total{method=\"POST\", handler=\"/messages\"} <--------------- metric ---------------------><-timestamp -><-value-> http_request_total{status=\"200\", method=\"GET\"}@1434417560938 => 94355 http_request_total{status=\"200\", method=\"GET\"}@1434417561287 => 94334 http_request_total{status=\"404\", method=\"GET\"}@1434417560938 => 38473 http_request_total{status=\"404\", method=\"GET\"}@1434417561287 => 38544 http_request_total{status=\"200\", method=\"POST\"}@1434417560938 => 4748 http_request_total{status=\"200\", method=\"POST\"}@1434417561287 => 4785 \u6570\u636e\u7c7b\u578b Gauge: \u53ef\u589e\u53ef\u51cf\u7684\u4efb\u610f\u503c\uff0c\u76f4\u63a5\u53cd\u5e94\u5f53\u524d\u65f6\u95f4\u7684\u72b6\u6001 Counter: \u53ea\u589e\u4e0d\u51cf\uff0c\u901a\u5e38\u9700\u8981\u4e0e rate , irate \u7b49\u51fd\u6570\u642d\u914d\uff0c\u8ba1\u7b97\u5355\u4f4d\u65f6\u95f4\u53d1\u751f\u6b21\u6570 Histogram: \u5305\u542b\u81ea\u5f00\u59cb\u76d1\u63a7\u4ee5\u6765\u76d1\u63a7\u6837\u672c\u4e2a\u6570\uff0c\u6837\u672c\u503c\u603b\u548c\uff0c\u4ee5\u53ca\u5404\u503c\u533a\u95f4\u5185\u6837\u672c\u4e2a\u6570 Summary: \u5305\u542b\u81ea\u76d1\u63a7\u4ee5\u6765\u76d1\u63a7\u6837\u672c\u4e2a\u6570\uff0c\u6837\u672c\u503c\u603b\u548c\uff0c\u4ee5\u53ca 50%, 90%, 99% \u7b49\u6837\u672c\u7684\u503c Counter rate(http_requests_total[5m]) topk(10, http_requests_total) Gauge delta(cpu_temp_celsius{host=\"zeus\"}[2h]) predict_linear(node_filesystem_free{job=\"node\"}[1h], 4 * 3600) Histogram Summary promql \u8868\u8fbe\u5f0f\u7c7b\u578b\uff1a \u77ac\u65f6\u5411\u91cf(Instant vector): \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u662f\u5355\u72ec\u7684\u6837\u672c [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ... ] \u533a\u95f4\u5411\u91cf(Range vector): \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e [ [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], ... ] \u6807\u91cf(Scalar): \u4e00\u4e2a\u6d6e\u70b9\u578b\u7684\u6570\u636e\u503c \u5b57\u7b26\u4e32(String): \u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u503c \u53ea\u6709\u77ac\u65f6\u5411\u91cf\u53ef\u4ee5\u7ed8\u5236\u4e3a\u56fe\u8868\u6570\u636e \u77ac\u65f6\u5411\u91cf \u76f4\u63a5\u4ee5 metrics \u540d\u67e5\u8be2 http_requests_total http_requests_total{} \u5229\u7528\u6807\u7b7e\u8fdb\u884c\u8fc7\u6ee4(\u5b8c\u5168\u5339\u914d/\u6b63\u5219\u8868\u8fbe\u5f0f)\uff1a = \u76f8\u540c\u6807\u7b7e http_requests_total{instance=\"localhost:9090\"} != \u4e0d\u76f8\u540c\u6807\u7b7e http_requests_total{instance!=\"localhost:9090\"} =~ \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d http_requests_total{environment=~\"staging|testing|development\", method!=\"GET\"} !~ \u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u5339\u914d http_requests_total{environment!~\"staging|testing|development\", method!=\"GET\"} \u4e0d\u542b\u67d0\u4e2a\u6807\u7b7e\uff08\u4ee5\u4e0d\u542b topic \u6807\u7b7e\u4e3a\u4f8b\uff09\uff1a kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesOutPerSec\", topic=\"\"} \u533a\u95f4\u5411\u91cf \u65f6\u95f4\u5355\u4f4d\uff1a s - \u79d2 m - \u5206\u949f h - \u5c0f\u65f6 d - \u5929 w - \u5468 y - \u5e74 \u65f6\u95f4\u4f4d\u79fb\uff1a http_request_total{} # \u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u5f53\u524d\u6700\u65b0\u7684\u6570\u636e http_request_total{}[5m] # \u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c5\u5206\u949f\u5185\u7684\u6570\u636e \u805a\u5408\u64cd\u4f5c \u4f5c\u7528\u4e8e\u77ac\u65f6\u5411\u91cf\uff0c\u5c06\u591a\u7ec4\u77ac\u65f6\u5411\u91cf\u7684\u503c\u805a\u5408\uff0c\u5f97\u5230\u65b0\u7684\u65f6\u95f4\u5e8f\u5217 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u5dee\u5f02) count (\u8ba1\u6570) count_values (\u5bf9 value \u8fdb\u884c\u8ba1\u6570) bottomk (\u6837\u672c\u503c\u6700\u5c0f\u7684 k \u4e2a\u5143\u7d20) topk (\u6837\u672c\u503c\u6700\u5927\u7684k\u4e2a\u5143\u7d20) quantile (\u5206\u5e03\u7edf\u8ba1) \u8fd9\u4e9b\u64cd\u4f5c\u7b26\u88ab\u7528\u4e8e\u805a\u5408\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff0c\u6216\u8005\u901a\u8fc7 without \u6216\u8005 by \u5b50\u8bed\u53e5\u6765\u4fdd\u7559\u4e0d\u540c\u7684\u7ef4\u5ea6\u3002 <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u67e5\u8be2\u7cfb\u7edf\u6240\u6709http\u8bf7\u6c42\u7684\u603b\u91cf sum(http_request_total) \u6309\u7167 mode \u8ba1\u7b97\u4e3b\u673a CPU \u7684\u5e73\u5747\u4f7f\u7528\u65f6\u95f4 avg(node_cpu) by (mode) \u6309\u7167\u4e3b\u673a\u67e5\u8be2\u5404\u4e2a\u4e3b\u673a\u7684 CPU \u4f7f\u7528\u7387 sum(sum(irate(node_cpu{mode!='idle'}[5m])) / sum(irate(node_cpu[5m]))) by (instance) label list \u4e5f\u53ef\u4ee5\u653e\u5728\u524d\u9762 sum by (job) (matrics{}) \u5185\u7f6e\u51fd\u6570 rate rate \u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u5f97\u5230\u533a\u95f4\u5185\u6837\u672c\u503c\u7684\u589e\u957f\u901f\u7387\u3002 \u5bf9\u4e8e Counter \u7c7b\u578b\u7684\u6570\u636e\uff0c\u5373\u76d1\u63a7\u6837\u672c\u503c\u662f\u6839\u636e\u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u6240\u5f97\u589e\u957f\u901f\u7387\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u589e\u91cf\u3002 \u7279\u522b\u662f\u5bf9\u603b\u5171\u8017\u8d39\u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u589e\u91cf\uff0c\u540c\u6837\u53ef\u4ee5\u89c6\u4e3a\u5355\u4f4d\u65f6\u95f4\u7684\u5360\u6bd4\u3002 \u4f8b\u5982\uff1a node_disk_io_time_seconds_total{device=\"vdb\"} \u53ef\u4ee5\u8868\u793a\u78c1\u76d8 vdb \u53d1\u751f\u78c1\u76d8 io \u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u90a3\u4e48 rate(node_disk_io_time_seconds_total{device=\"vdb\"}[5m]) \u4ee5 5 \u5206\u949f\u4e3a\u533a\u95f4\uff0c\u8ba1\u7b97\u533a\u95f4\u5185\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u65f6\u95f4\u7684\u589e\u957f\u901f\u7387\uff0c\u589e\u957f\u901f\u7387\u76f8\u5f53\u4e8e\u5355\u4f4d\u65f6\u95f4\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u65f6\u95f4\u7684\u589e\u957f\u91cf\uff0c\u540c\u6837\u76f8\u5f53\u4e8e\u5355\u4f4d\u65f6\u95f4\u5185\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u5360\u6bd4\uff0c\u4e5f\u5373\u78c1\u76d8\u4f7f\u7528\u7387 %util irate irate \u7c7b\u4f3c rate \uff0c\u4e5f\u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u5f97\u5230\u533a\u95f4\u5185\u6837\u672c\u503c\u7684\u589e\u957f\u901f\u7387\u3002 \u533a\u522b\u5728\u4e8e\uff0c irate \u8ba1\u7b97\u589e\u957f\u503c\u65f6\u4f1a\u5728\u65f6\u95f4\u533a\u95f4\u5185\u53d6\u6700\u8fd1\u4e24\u4e2a 2 \u4e2a\u6837\u672c\u8ba1\u7b97\u901f\u7387\uff0c\u800c rate \u4f1a\u53d6\u65f6\u95f4\u533a\u95f4\u5185\u6240\u6709\u6837\u672c\u8ba1\u7b97\u51fa\u4e00\u7ec4\u901f\u7387\u53d6\u5e73\u5747\u503c\u3002 \u56e0\u6b64\uff0c\u5f53\u65f6\u95f4\u533a\u95f4\u8f83\u5927\u65f6\uff0c rate \u7684\u66f2\u7ebf\u6bd4 irate \u66f4\u52a0\u5e73\u6ed1\uff0c\u5f53\u65f6\u95f4\u533a\u95f4\u9010\u6e10\u7f29\u5c0f\u65f6\uff0c rate \u7684\u66f2\u7ebf\u4f1a\u9010\u6e10\u903c\u8fdb irate \u7684\u66f2\u7ebf\u3002 increase increase() \u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u83b7\u53d6\u533a\u95f4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6837\u672c\u503c\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u503c\u4e4b\u95f4\u7684\u589e\u957f\u91cf\u3002 topk \u524d n \u6761\u65f6\u5e8f topk(n, ) bottomk \u540e n \u6761\u65f6\u5e8f bottomk(n, )","title":"2.2 promql"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#22-promql","text":"","title":"2.2 PromQL"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_1","text":"prometheus \u7684\u76d1\u63a7\u6570\u636e\u88ab\u7ec4\u7ec7\u4e3a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u6bcf\u4e00\u9879\u7531 metric name \u548c labels (key-value pairs) \u6807\u8bc6\uff0c\u683c\u5f0f\u4e3a\uff1a <metric name>{<label name>=<label value>, ...} <value> example: api_http_requests_total{method=\"POST\", handler=\"/messages\"} <--------------- metric ---------------------><-timestamp -><-value-> http_request_total{status=\"200\", method=\"GET\"}@1434417560938 => 94355 http_request_total{status=\"200\", method=\"GET\"}@1434417561287 => 94334 http_request_total{status=\"404\", method=\"GET\"}@1434417560938 => 38473 http_request_total{status=\"404\", method=\"GET\"}@1434417561287 => 38544 http_request_total{status=\"200\", method=\"POST\"}@1434417560938 => 4748 http_request_total{status=\"200\", method=\"POST\"}@1434417561287 => 4785","title":"\u76d1\u63a7\u6570\u636e\u6a21\u578b"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_2","text":"Gauge: \u53ef\u589e\u53ef\u51cf\u7684\u4efb\u610f\u503c\uff0c\u76f4\u63a5\u53cd\u5e94\u5f53\u524d\u65f6\u95f4\u7684\u72b6\u6001 Counter: \u53ea\u589e\u4e0d\u51cf\uff0c\u901a\u5e38\u9700\u8981\u4e0e rate , irate \u7b49\u51fd\u6570\u642d\u914d\uff0c\u8ba1\u7b97\u5355\u4f4d\u65f6\u95f4\u53d1\u751f\u6b21\u6570 Histogram: \u5305\u542b\u81ea\u5f00\u59cb\u76d1\u63a7\u4ee5\u6765\u76d1\u63a7\u6837\u672c\u4e2a\u6570\uff0c\u6837\u672c\u503c\u603b\u548c\uff0c\u4ee5\u53ca\u5404\u503c\u533a\u95f4\u5185\u6837\u672c\u4e2a\u6570 Summary: \u5305\u542b\u81ea\u76d1\u63a7\u4ee5\u6765\u76d1\u63a7\u6837\u672c\u4e2a\u6570\uff0c\u6837\u672c\u503c\u603b\u548c\uff0c\u4ee5\u53ca 50%, 90%, 99% \u7b49\u6837\u672c\u7684\u503c","title":"\u6570\u636e\u7c7b\u578b"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#counter","text":"rate(http_requests_total[5m]) topk(10, http_requests_total)","title":"Counter"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#gauge","text":"delta(cpu_temp_celsius{host=\"zeus\"}[2h]) predict_linear(node_filesystem_free{job=\"node\"}[1h], 4 * 3600)","title":"Gauge"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#histogram","text":"","title":"Histogram"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#summary","text":"","title":"Summary"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#promql","text":"\u8868\u8fbe\u5f0f\u7c7b\u578b\uff1a \u77ac\u65f6\u5411\u91cf(Instant vector): \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u662f\u5355\u72ec\u7684\u6837\u672c [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ... ] \u533a\u95f4\u5411\u91cf(Range vector): \u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u5e8f\u5217\u7684\u6bcf\u4e00\u9879\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e [ [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], ... ] \u6807\u91cf(Scalar): \u4e00\u4e2a\u6d6e\u70b9\u578b\u7684\u6570\u636e\u503c \u5b57\u7b26\u4e32(String): \u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u503c \u53ea\u6709\u77ac\u65f6\u5411\u91cf\u53ef\u4ee5\u7ed8\u5236\u4e3a\u56fe\u8868\u6570\u636e","title":"promql"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_3","text":"\u76f4\u63a5\u4ee5 metrics \u540d\u67e5\u8be2 http_requests_total http_requests_total{} \u5229\u7528\u6807\u7b7e\u8fdb\u884c\u8fc7\u6ee4(\u5b8c\u5168\u5339\u914d/\u6b63\u5219\u8868\u8fbe\u5f0f)\uff1a = \u76f8\u540c\u6807\u7b7e http_requests_total{instance=\"localhost:9090\"} != \u4e0d\u76f8\u540c\u6807\u7b7e http_requests_total{instance!=\"localhost:9090\"} =~ \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d http_requests_total{environment=~\"staging|testing|development\", method!=\"GET\"} !~ \u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u5339\u914d http_requests_total{environment!~\"staging|testing|development\", method!=\"GET\"} \u4e0d\u542b\u67d0\u4e2a\u6807\u7b7e\uff08\u4ee5\u4e0d\u542b topic \u6807\u7b7e\u4e3a\u4f8b\uff09\uff1a kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesOutPerSec\", topic=\"\"}","title":"\u77ac\u65f6\u5411\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_4","text":"\u65f6\u95f4\u5355\u4f4d\uff1a s - \u79d2 m - \u5206\u949f h - \u5c0f\u65f6 d - \u5929 w - \u5468 y - \u5e74 \u65f6\u95f4\u4f4d\u79fb\uff1a http_request_total{} # \u77ac\u65f6\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u5f53\u524d\u6700\u65b0\u7684\u6570\u636e http_request_total{}[5m] # \u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\uff0c\u9009\u62e9\u4ee5\u5f53\u524d\u65f6\u95f4\u4e3a\u57fa\u51c6\uff0c5\u5206\u949f\u5185\u7684\u6570\u636e","title":"\u533a\u95f4\u5411\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_5","text":"\u4f5c\u7528\u4e8e\u77ac\u65f6\u5411\u91cf\uff0c\u5c06\u591a\u7ec4\u77ac\u65f6\u5411\u91cf\u7684\u503c\u805a\u5408\uff0c\u5f97\u5230\u65b0\u7684\u65f6\u95f4\u5e8f\u5217 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u5dee\u5f02) count (\u8ba1\u6570) count_values (\u5bf9 value \u8fdb\u884c\u8ba1\u6570) bottomk (\u6837\u672c\u503c\u6700\u5c0f\u7684 k \u4e2a\u5143\u7d20) topk (\u6837\u672c\u503c\u6700\u5927\u7684k\u4e2a\u5143\u7d20) quantile (\u5206\u5e03\u7edf\u8ba1) \u8fd9\u4e9b\u64cd\u4f5c\u7b26\u88ab\u7528\u4e8e\u805a\u5408\u6240\u6709\u6807\u7b7e\u7ef4\u5ea6\uff0c\u6216\u8005\u901a\u8fc7 without \u6216\u8005 by \u5b50\u8bed\u53e5\u6765\u4fdd\u7559\u4e0d\u540c\u7684\u7ef4\u5ea6\u3002 <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u67e5\u8be2\u7cfb\u7edf\u6240\u6709http\u8bf7\u6c42\u7684\u603b\u91cf sum(http_request_total) \u6309\u7167 mode \u8ba1\u7b97\u4e3b\u673a CPU \u7684\u5e73\u5747\u4f7f\u7528\u65f6\u95f4 avg(node_cpu) by (mode) \u6309\u7167\u4e3b\u673a\u67e5\u8be2\u5404\u4e2a\u4e3b\u673a\u7684 CPU \u4f7f\u7528\u7387 sum(sum(irate(node_cpu{mode!='idle'}[5m])) / sum(irate(node_cpu[5m]))) by (instance) label list \u4e5f\u53ef\u4ee5\u653e\u5728\u524d\u9762 sum by (job) (matrics{})","title":"\u805a\u5408\u64cd\u4f5c"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#_6","text":"","title":"\u5185\u7f6e\u51fd\u6570"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#rate","text":"rate \u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u5f97\u5230\u533a\u95f4\u5185\u6837\u672c\u503c\u7684\u589e\u957f\u901f\u7387\u3002 \u5bf9\u4e8e Counter \u7c7b\u578b\u7684\u6570\u636e\uff0c\u5373\u76d1\u63a7\u6837\u672c\u503c\u662f\u6839\u636e\u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u6240\u5f97\u589e\u957f\u901f\u7387\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u589e\u91cf\u3002 \u7279\u522b\u662f\u5bf9\u603b\u5171\u8017\u8d39\u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u589e\u91cf\uff0c\u540c\u6837\u53ef\u4ee5\u89c6\u4e3a\u5355\u4f4d\u65f6\u95f4\u7684\u5360\u6bd4\u3002 \u4f8b\u5982\uff1a node_disk_io_time_seconds_total{device=\"vdb\"} \u53ef\u4ee5\u8868\u793a\u78c1\u76d8 vdb \u53d1\u751f\u78c1\u76d8 io \u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0c\u90a3\u4e48 rate(node_disk_io_time_seconds_total{device=\"vdb\"}[5m]) \u4ee5 5 \u5206\u949f\u4e3a\u533a\u95f4\uff0c\u8ba1\u7b97\u533a\u95f4\u5185\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u65f6\u95f4\u7684\u589e\u957f\u901f\u7387\uff0c\u589e\u957f\u901f\u7387\u76f8\u5f53\u4e8e\u5355\u4f4d\u65f6\u95f4\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u65f6\u95f4\u7684\u589e\u957f\u91cf\uff0c\u540c\u6837\u76f8\u5f53\u4e8e\u5355\u4f4d\u65f6\u95f4\u5185\u82b1\u8d39\u5728\u78c1\u76d8 io \u7684\u5360\u6bd4\uff0c\u4e5f\u5373\u78c1\u76d8\u4f7f\u7528\u7387 %util","title":"rate"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#irate","text":"irate \u7c7b\u4f3c rate \uff0c\u4e5f\u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u5f97\u5230\u533a\u95f4\u5185\u6837\u672c\u503c\u7684\u589e\u957f\u901f\u7387\u3002 \u533a\u522b\u5728\u4e8e\uff0c irate \u8ba1\u7b97\u589e\u957f\u503c\u65f6\u4f1a\u5728\u65f6\u95f4\u533a\u95f4\u5185\u53d6\u6700\u8fd1\u4e24\u4e2a 2 \u4e2a\u6837\u672c\u8ba1\u7b97\u901f\u7387\uff0c\u800c rate \u4f1a\u53d6\u65f6\u95f4\u533a\u95f4\u5185\u6240\u6709\u6837\u672c\u8ba1\u7b97\u51fa\u4e00\u7ec4\u901f\u7387\u53d6\u5e73\u5747\u503c\u3002 \u56e0\u6b64\uff0c\u5f53\u65f6\u95f4\u533a\u95f4\u8f83\u5927\u65f6\uff0c rate \u7684\u66f2\u7ebf\u6bd4 irate \u66f4\u52a0\u5e73\u6ed1\uff0c\u5f53\u65f6\u95f4\u533a\u95f4\u9010\u6e10\u7f29\u5c0f\u65f6\uff0c rate \u7684\u66f2\u7ebf\u4f1a\u9010\u6e10\u903c\u8fdb irate \u7684\u66f2\u7ebf\u3002","title":"irate"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#increase","text":"increase() \u4f5c\u7528\u4e8e\u533a\u95f4\u5411\u91cf\uff0c\u83b7\u53d6\u533a\u95f4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6837\u672c\u503c\u548c\u6700\u540e\u4e00\u4e2a\u6837\u672c\u503c\u4e4b\u95f4\u7684\u589e\u957f\u91cf\u3002","title":"increase"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#topk","text":"\u524d n \u6761\u65f6\u5e8f topk(n, )","title":"topk"},{"location":"2-%E7%9B%91%E6%8E%A7/2-promql/#bottomk","text":"\u540e n \u6761\u65f6\u5e8f bottomk(n, )","title":"bottomk"},{"location":"2-%E7%9B%91%E6%8E%A7/3-grafana/","text":"2.3 Grafana grafana \u53ef\u4ee5\u83b7\u53d6 prometheus \u6570\u636e\uff0c\u63d0\u4f9b\u76d1\u63a7\u56fe\u8868\u3002 \u4e0b\u8f7d\u5b89\u88c5\uff1a $ wget https://dl.grafana.com/oss/release/grafana-6.0.2-1.x86_64.rpm $ sudo yum localinstall grafana-6.0.2-1.x86_64.rpm \u8fd0\u884c\uff1a $ service grafana-server start \u5f00\u673a\u81ea\u542f\uff1a $ /sbin/chkconfig --add grafana-server \u9ed8\u8ba4\u7aef\u53e3\uff1a3000 default user: admin default password: admin \u914d\u7f6e \u914d\u7f6e\u6587\u4ef6\uff1a/etc/grafana/grafana.ini \u7ba1\u7406 \u7ba1\u7406\u811a\u672c\uff1a/etc/init.d/grafana-server \u6570\u636e granfana \u6570\u636e\u76ee\u5f55\uff1a/var/lib/grafana","title":"2.3 grafana"},{"location":"2-%E7%9B%91%E6%8E%A7/3-grafana/#23-grafana","text":"grafana \u53ef\u4ee5\u83b7\u53d6 prometheus \u6570\u636e\uff0c\u63d0\u4f9b\u76d1\u63a7\u56fe\u8868\u3002 \u4e0b\u8f7d\u5b89\u88c5\uff1a $ wget https://dl.grafana.com/oss/release/grafana-6.0.2-1.x86_64.rpm $ sudo yum localinstall grafana-6.0.2-1.x86_64.rpm \u8fd0\u884c\uff1a $ service grafana-server start \u5f00\u673a\u81ea\u542f\uff1a $ /sbin/chkconfig --add grafana-server \u9ed8\u8ba4\u7aef\u53e3\uff1a3000 default user: admin default password: admin","title":"2.3 Grafana"},{"location":"2-%E7%9B%91%E6%8E%A7/3-grafana/#_1","text":"\u914d\u7f6e\u6587\u4ef6\uff1a/etc/grafana/grafana.ini","title":"\u914d\u7f6e"},{"location":"2-%E7%9B%91%E6%8E%A7/3-grafana/#_2","text":"\u7ba1\u7406\u811a\u672c\uff1a/etc/init.d/grafana-server","title":"\u7ba1\u7406"},{"location":"2-%E7%9B%91%E6%8E%A7/3-grafana/#_3","text":"granfana \u6570\u636e\u76ee\u5f55\uff1a/var/lib/grafana","title":"\u6570\u636e"},{"location":"2-%E7%9B%91%E6%8E%A7/5-%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E9%87%87%E9%9B%86%E7%9B%AE%E6%A0%87/","text":"2.5 \u52a8\u6001\u914d\u7f6e\u91c7\u96c6\u76ee\u6807 \u914d\u7f6e\u91c7\u96c6\u76ee\u6807 targets: static_configs : \u76f4\u63a5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a targets file_sd_configs : \u901a\u8fc7 json \u6587\u4ef6\u6307\u5b9a targets consul_sd_configs : \u901a\u8fc7 consul \u670d\u52a1\u6307\u5b9a targets \u57fa\u4e8e\u6587\u4ef6 \u901a\u8fc7 targets.json \u6587\u4ef6\u5b9a\u4e49\u6240\u6709\u7684\u76d1\u63a7\u76ee\u6807\uff1a [ { \"targets\" : [ \"localhost:8080\" ], \"labels\" : { \"env\" : \"localhost\" , \"job\" : \"cadvisor\" } }, { \"targets\" : [ \"localhost:9104\" ], \"labels\" : { \"env\" : \"prod\" , \"job\" : \"mysqld\" } }, { \"targets\" : [ \"localhost:9100\" ], \"labels\" : { \"env\" : \"prod\" , \"job\" : \"node\" } } ] \u521b\u5efa prometheus \u914d\u7f6e\u6587\u4ef6\uff1a global : scrape_interval : 15s scrape_timeout : 10s evaluation_interval : 15s scrape_configs : - job_name : 'file_ds' file_sd_configs : - refresh_interval : 1m files : - targets.json prometheus \u5468\u671f\u6027\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u5f53\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4e0d\u9700\u8981\u5bf9 prometheus \u8fdb\u884c\u91cd\u542f Consul \u4e0b\u8f7d(https://www.consul.io/downloads.html) $ wget https://releases.hashicorp.com/consul/1.4.4/consul_1.4.4_linux_amd64.zip $ unzip consul_1.4.4_linux_amd64.zip \u542f\u52a8\uff08\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5355\u8282\u70b9\uff09 $ ./consul agent -dev \u67e5\u770b\u96c6\u7fa4\u8282\u70b9\uff1a $ ./consul members $ curl localhost:8500/v1/catalog/nodes \u6dfb\u52a0\u670d\u52a1\uff1a $ echo '{\"service\": {\"name\": \"node_exporter\", \"tags\": [\"exporter\"], \"port\": 9100}}' \\ | sudo tee /etc/consul.d/node_exporter.json $ consul agent -dev -config-dir=/etc/consul.d $ curl http://localhost:8500/v1/catalog/service/node_exporter \u901a\u8fc7 put \u8bf7\u6c42\u6dfb\u52a0\u670d\u52a1\uff1a $ curl http://localhost:8900/v1/agent/service/register -X PUT -i -H \"Content-Type:application/json\" -d '{ \"ID\": \"kafkaNode3\", \"Name\": \"kafkaNode\", \"Tags\": [ \"node\" ], \"Address\": \"10.9.145.115\", \"Port\": 5556, \"EnableTagOverride\": false, \"Check\": { \"DeregisterCriticalServiceAfter\": \"90m\", \"HTTP\": \"http://10.9.164.4:65431?Action=CheckHealth\", \"Interval\": \"10s\" } }' $ curl http://localhost:8500/v1/catalog/services $ curl http://localhost:8500/v1/catalog/service/kafkaNode \u5728consul_sd_configs\u5b9a\u4e49\u5f53\u4e2d\u901a\u8fc7server\u5b9a\u4e49\u4e86Consul\u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0cservices\u5219\u5b9a\u4e49\u4e86\u5f53\u524d\u9700\u8981\u53d1\u73b0\u54ea\u4e9b\u7c7b\u578b\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u8fd9\u91cc\u9650\u5b9a\u4e86\u53ea\u83b7\u53d6node_exporter\u7684\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f\u3002 - job_name : node_exporter metrics_path : /metrics scheme : http consul_sd_configs : - server : localhost:8500 services : - node_exporter","title":"2.5 \u52a8\u6001\u914d\u7f6e\u91c7\u96c6\u76ee\u6807"},{"location":"2-%E7%9B%91%E6%8E%A7/5-%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E9%87%87%E9%9B%86%E7%9B%AE%E6%A0%87/#25","text":"\u914d\u7f6e\u91c7\u96c6\u76ee\u6807 targets: static_configs : \u76f4\u63a5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a targets file_sd_configs : \u901a\u8fc7 json \u6587\u4ef6\u6307\u5b9a targets consul_sd_configs : \u901a\u8fc7 consul \u670d\u52a1\u6307\u5b9a targets","title":"2.5 \u52a8\u6001\u914d\u7f6e\u91c7\u96c6\u76ee\u6807"},{"location":"2-%E7%9B%91%E6%8E%A7/5-%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E9%87%87%E9%9B%86%E7%9B%AE%E6%A0%87/#_1","text":"\u901a\u8fc7 targets.json \u6587\u4ef6\u5b9a\u4e49\u6240\u6709\u7684\u76d1\u63a7\u76ee\u6807\uff1a [ { \"targets\" : [ \"localhost:8080\" ], \"labels\" : { \"env\" : \"localhost\" , \"job\" : \"cadvisor\" } }, { \"targets\" : [ \"localhost:9104\" ], \"labels\" : { \"env\" : \"prod\" , \"job\" : \"mysqld\" } }, { \"targets\" : [ \"localhost:9100\" ], \"labels\" : { \"env\" : \"prod\" , \"job\" : \"node\" } } ] \u521b\u5efa prometheus \u914d\u7f6e\u6587\u4ef6\uff1a global : scrape_interval : 15s scrape_timeout : 10s evaluation_interval : 15s scrape_configs : - job_name : 'file_ds' file_sd_configs : - refresh_interval : 1m files : - targets.json prometheus \u5468\u671f\u6027\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u5f53\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u4e0d\u9700\u8981\u5bf9 prometheus \u8fdb\u884c\u91cd\u542f","title":"\u57fa\u4e8e\u6587\u4ef6"},{"location":"2-%E7%9B%91%E6%8E%A7/5-%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E9%87%87%E9%9B%86%E7%9B%AE%E6%A0%87/#consul","text":"\u4e0b\u8f7d(https://www.consul.io/downloads.html) $ wget https://releases.hashicorp.com/consul/1.4.4/consul_1.4.4_linux_amd64.zip $ unzip consul_1.4.4_linux_amd64.zip \u542f\u52a8\uff08\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5355\u8282\u70b9\uff09 $ ./consul agent -dev \u67e5\u770b\u96c6\u7fa4\u8282\u70b9\uff1a $ ./consul members $ curl localhost:8500/v1/catalog/nodes \u6dfb\u52a0\u670d\u52a1\uff1a $ echo '{\"service\": {\"name\": \"node_exporter\", \"tags\": [\"exporter\"], \"port\": 9100}}' \\ | sudo tee /etc/consul.d/node_exporter.json $ consul agent -dev -config-dir=/etc/consul.d $ curl http://localhost:8500/v1/catalog/service/node_exporter \u901a\u8fc7 put \u8bf7\u6c42\u6dfb\u52a0\u670d\u52a1\uff1a $ curl http://localhost:8900/v1/agent/service/register -X PUT -i -H \"Content-Type:application/json\" -d '{ \"ID\": \"kafkaNode3\", \"Name\": \"kafkaNode\", \"Tags\": [ \"node\" ], \"Address\": \"10.9.145.115\", \"Port\": 5556, \"EnableTagOverride\": false, \"Check\": { \"DeregisterCriticalServiceAfter\": \"90m\", \"HTTP\": \"http://10.9.164.4:65431?Action=CheckHealth\", \"Interval\": \"10s\" } }' $ curl http://localhost:8500/v1/catalog/services $ curl http://localhost:8500/v1/catalog/service/kafkaNode \u5728consul_sd_configs\u5b9a\u4e49\u5f53\u4e2d\u901a\u8fc7server\u5b9a\u4e49\u4e86Consul\u670d\u52a1\u7684\u8bbf\u95ee\u5730\u5740\uff0cservices\u5219\u5b9a\u4e49\u4e86\u5f53\u524d\u9700\u8981\u53d1\u73b0\u54ea\u4e9b\u7c7b\u578b\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u8fd9\u91cc\u9650\u5b9a\u4e86\u53ea\u83b7\u53d6node_exporter\u7684\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f\u3002 - job_name : node_exporter metrics_path : /metrics scheme : http consul_sd_configs : - server : localhost:8500 services : - node_exporter","title":"Consul"},{"location":"2-%E7%9B%91%E6%8E%A7/6-%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6/","text":"2.6 \u914d\u7f6e\u544a\u8b66 \u914d\u7f6e\u544a\u8b66\u89c4\u5219 \u4f7f\u7528 PromQL \u5b9a\u4e49\u544a\u8b66\u89c4\u5219\uff1a groups : - name : example rules : - alert : HighErrorRate expr : job:request_latency_seconds:mean5m{job=\"myjob\"} > 0.5 for : 10m labels : severity : page annotations : summary : High request latency description : description info \u6307\u5b9a\u544a\u8b66\u89c4\u5219\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff1a rule_files : - /etc/prometheus/rules/*.rules groups : - name : hostStatsAlert rules : - alert : hostCpuUsageAlert expr : sum(avg without (cpu)(irate(node_cpu_seconds_total{mode!='idle'}[5m]))) by (instance) > 0.85 for : 1m labels : severity : page annotations : summary : \"Instance {{ $labels.instance }} CPU usgae high\" description : \"{{ $labels.instance }} CPU usage above 85% (current value: {{ $value }})\" - alert : hostMemUsageAlert expr : (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)/node_memory_MemTotal_bytes > 0.85 for : 1m labels : severity : page annotations : summary : \"Instance {{ $labels.instance }} MEM usgae high\" description : \"{{ $labels.instance }} MEM usage above 85% (current value: {{ $value }})\" \u901a\u8fc7 http://127.0.0.1:9090/rules \u67e5\u770b\u89c4\u5219\u6587\u4ef6 \u5bf9\u4e8e pending \u6216\u8005 firing \u7684\u544a\u8b66\uff0c\u53ef\u4ee5\u5728\u65f6\u95f4\u5e8f\u5217 ALERTS{alertname=\"<alert name>\", alertstate=\"pending|firing\", <additional alert labels>} \u4e2d\u67e5\u627e AlertManager $ wget https://github.com/prometheus/alertmanager/releases/download/v0.16.2/alertmanager-0.16.2.linux-amd64.tar.gz $ tar zxvf alertmanager-0.16.2.linux-amd64.tar.gz $ ln -sf alertmanager-0.16.2.linux-amd64 alertmanager $ cd alertmanager \u914d\u7f6e\u6587\u4ef6 alertmanager.yml \u542f\u52a8 alertmanager\uff1a $ ./alertmanager --config.file=./alertmanager.yml --storage.path=/data/alertmanager \u67e5\u770b\uff1a $ curl http://localhost:9093 \u5728 prometheus \u7684\u914d\u7f6e\u4e2d\u589e\u52a0: alerting : alertmanagers : - static_configs : - targets : - localhost:9093","title":"2.6 \u914d\u7f6e\u544a\u8b66"},{"location":"2-%E7%9B%91%E6%8E%A7/6-%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6/#26","text":"","title":"2.6 \u914d\u7f6e\u544a\u8b66"},{"location":"2-%E7%9B%91%E6%8E%A7/6-%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6/#_1","text":"\u4f7f\u7528 PromQL \u5b9a\u4e49\u544a\u8b66\u89c4\u5219\uff1a groups : - name : example rules : - alert : HighErrorRate expr : job:request_latency_seconds:mean5m{job=\"myjob\"} > 0.5 for : 10m labels : severity : page annotations : summary : High request latency description : description info \u6307\u5b9a\u544a\u8b66\u89c4\u5219\u6587\u4ef6\u7684\u8bbf\u95ee\u8def\u5f84\uff1a rule_files : - /etc/prometheus/rules/*.rules groups : - name : hostStatsAlert rules : - alert : hostCpuUsageAlert expr : sum(avg without (cpu)(irate(node_cpu_seconds_total{mode!='idle'}[5m]))) by (instance) > 0.85 for : 1m labels : severity : page annotations : summary : \"Instance {{ $labels.instance }} CPU usgae high\" description : \"{{ $labels.instance }} CPU usage above 85% (current value: {{ $value }})\" - alert : hostMemUsageAlert expr : (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes)/node_memory_MemTotal_bytes > 0.85 for : 1m labels : severity : page annotations : summary : \"Instance {{ $labels.instance }} MEM usgae high\" description : \"{{ $labels.instance }} MEM usage above 85% (current value: {{ $value }})\" \u901a\u8fc7 http://127.0.0.1:9090/rules \u67e5\u770b\u89c4\u5219\u6587\u4ef6 \u5bf9\u4e8e pending \u6216\u8005 firing \u7684\u544a\u8b66\uff0c\u53ef\u4ee5\u5728\u65f6\u95f4\u5e8f\u5217 ALERTS{alertname=\"<alert name>\", alertstate=\"pending|firing\", <additional alert labels>} \u4e2d\u67e5\u627e","title":"\u914d\u7f6e\u544a\u8b66\u89c4\u5219"},{"location":"2-%E7%9B%91%E6%8E%A7/6-%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6/#alertmanager","text":"$ wget https://github.com/prometheus/alertmanager/releases/download/v0.16.2/alertmanager-0.16.2.linux-amd64.tar.gz $ tar zxvf alertmanager-0.16.2.linux-amd64.tar.gz $ ln -sf alertmanager-0.16.2.linux-amd64 alertmanager $ cd alertmanager \u914d\u7f6e\u6587\u4ef6 alertmanager.yml \u542f\u52a8 alertmanager\uff1a $ ./alertmanager --config.file=./alertmanager.yml --storage.path=/data/alertmanager \u67e5\u770b\uff1a $ curl http://localhost:9093 \u5728 prometheus \u7684\u914d\u7f6e\u4e2d\u589e\u52a0: alerting : alertmanagers : - static_configs : - targets : - localhost:9093","title":"AlertManager"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/","text":"2.4 exporter prometheus \u914d\u7f6e\u7684 scrape_configs \u4e2d\u7684 targets \u7684\u6bcf\u4e00\u9879\u90fd\u662f\u7531 exporter \u66b4\u9732\u7684\u5730\u5740\uff0cprometheus \u4f1a\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u4ece exporter \u62c9\u53d6\u76d1\u63a7\u6570\u636e","title":"2.4 exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/#24-exporter","text":"prometheus \u914d\u7f6e\u7684 scrape_configs \u4e2d\u7684 targets \u7684\u6bcf\u4e00\u9879\u90fd\u662f\u7531 exporter \u66b4\u9732\u7684\u5730\u5740\uff0cprometheus \u4f1a\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u4ece exporter \u62c9\u53d6\u76d1\u63a7\u6570\u636e","title":"2.4 exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/","text":"2.4.1 node_exporter node_exporter \u53ef\u4ee5\u91c7\u96c6\u673a\u5668\u7684\u57fa\u7840\u76d1\u63a7\uff0c\u5982 cpu\uff0c\u5185\u5b58\u7b49\u4fe1\u606f\u3002 $ wget https://github.com/prometheus/node_exporter/releases/download/v0.17.0/node_exporter-0.17.0.linux-amd64.tar.gz $ tar zxvf node_exporter-0.17.0.linux-amd64.tar.gz $ cd node_exporter-0.17.0.linux-amd64 $ ./node_exporter $ curl http://localhost:9100/metrics \u4fee\u6539 prometheus.yml \uff0c\u589e\u52a0 job\uff1a scrape_configs : - job_name : 'node' static_configs : - targets : [ 'localhost:9100' ]","title":"2.4.1 node_exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/#241-node_exporter","text":"node_exporter \u53ef\u4ee5\u91c7\u96c6\u673a\u5668\u7684\u57fa\u7840\u76d1\u63a7\uff0c\u5982 cpu\uff0c\u5185\u5b58\u7b49\u4fe1\u606f\u3002 $ wget https://github.com/prometheus/node_exporter/releases/download/v0.17.0/node_exporter-0.17.0.linux-amd64.tar.gz $ tar zxvf node_exporter-0.17.0.linux-amd64.tar.gz $ cd node_exporter-0.17.0.linux-amd64 $ ./node_exporter $ curl http://localhost:9100/metrics \u4fee\u6539 prometheus.yml \uff0c\u589e\u52a0 job\uff1a scrape_configs : - job_name : 'node' static_configs : - targets : [ 'localhost:9100' ]","title":"2.4.1 node_exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/1-memory/","text":"2.4.1.1 \u5185\u5b58\u76d1\u63a7\u6307\u6807 \u603b\u5185\u5b58\u5927\u5c0f node_memory_MemTotal_bytes \u7a7a\u95f2\u5185\u5b58\u5927\u5c0f node_memory_MemFree_bytes cached \u5360\u7528\u5927\u5c0f node_memory_Cached_bytes buffer \u5360\u7528\u5927\u5c0f node_memory_Buffers_bytes \u5185\u5b58\u4f7f\u7528\u7387\uff08\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\uff09 (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100","title":"2.4.1.1 \u5185\u5b58"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/1-memory/#2411","text":"\u603b\u5185\u5b58\u5927\u5c0f node_memory_MemTotal_bytes \u7a7a\u95f2\u5185\u5b58\u5927\u5c0f node_memory_MemFree_bytes cached \u5360\u7528\u5927\u5c0f node_memory_Cached_bytes buffer \u5360\u7528\u5927\u5c0f node_memory_Buffers_bytes \u5185\u5b58\u4f7f\u7528\u7387\uff08\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\uff09 (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)) / node_memory_MemTotal_bytes * 100","title":"2.4.1.1 \u5185\u5b58\u76d1\u63a7\u6307\u6807"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/2-cpu/","text":"2.4.1.2 CPU \u76d1\u63a7\u6307\u6807 cpu \u65f6\u95f4 \u8868\u793a cpu \u65f6\u95f4\uff0c\u6307\u6807\u662f counter \u7c7b\u578b node_cpu_seconds_total \u8868\u793a cpu \u7a7a\u95f2\u65f6\u95f4\uff0c\u6307\u6807\u662f counter \u7c7b\u578b node_cpu_seconds_total{mode=\"idle\"} \u8868\u793a\u5355\u4f4d\u65f6\u95f4\u5185\uff0ccpu \u7a7a\u95f2\u65f6\u95f4\u5360\u6bd4 rate(node_cpu_seconds_total{mode=\"idle\"}[5m]) \u4ee5\u5b9e\u4f8b\u5212\u5206\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u5b9e\u4f8b\u6240\u6709 cpu \u6838 \u7684\u7a7a\u95f2\u65f6\u95f4\u5360\u6bd4 avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) the percentage of CPU used 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)","title":"2.4.1.2 cpu"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/2-cpu/#2412-cpu","text":"","title":"2.4.1.2 CPU \u76d1\u63a7\u6307\u6807"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/2-cpu/#cpu","text":"\u8868\u793a cpu \u65f6\u95f4\uff0c\u6307\u6807\u662f counter \u7c7b\u578b node_cpu_seconds_total \u8868\u793a cpu \u7a7a\u95f2\u65f6\u95f4\uff0c\u6307\u6807\u662f counter \u7c7b\u578b node_cpu_seconds_total{mode=\"idle\"} \u8868\u793a\u5355\u4f4d\u65f6\u95f4\u5185\uff0ccpu \u7a7a\u95f2\u65f6\u95f4\u5360\u6bd4 rate(node_cpu_seconds_total{mode=\"idle\"}[5m]) \u4ee5\u5b9e\u4f8b\u5212\u5206\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u5b9e\u4f8b\u6240\u6709 cpu \u6838 \u7684\u7a7a\u95f2\u65f6\u95f4\u5360\u6bd4 avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m]))","title":"cpu \u65f6\u95f4"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/2-cpu/#the-percentage-of-cpu-used","text":"100 - (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)","title":"the percentage of CPU used"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/","text":"2.4.1.3 \u78c1\u76d8\u76d1\u63a7\u6307\u6807 \u5bb9\u91cf df -h 100 - ((node_filesystem_avail_bytes{} * 100) / node_filesystem_size_bytes{}) df -i 100 - node_filesystem_files_free{}/node_filesystem_files{} * 100 io \u8d1f\u8f7d r/s rate(node_disk_reads_completed_total{}[5m]) w/s rate(node_disk_writes_completed_total{}[5m]) rkB/s wkB/s %util \u78c1\u76d8\u53d1\u751f io \u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0cCounter \u7c7b\u578b node_disk_io_time_seconds_total \u78c1\u76d8\u4f7f\u7528\u7387 %util \uff08\u5373\u5355\u4f4d\u65f6\u95f4\u5185\u78c1\u76d8\u53d1\u751f io \u65f6\u95f4\u5360\u6bd4\uff09 rate(node_disk_io_time_seconds_total{}[5m]) avgqu-sz rate(node_disk_io_time_weighted_seconds_total{}[5m]) r_await (ms) rate(node_disk_read_time_seconds_total{}[5m]) / rate(node_disk_reads_completed_total{}[5m]) * 1000 w_await (ms) rate(node_disk_write_time_seconds_total{}[5m]) / rate(node_disk_writes_completed_total{}[5m]) * 1000 \u53c2\u8003 https://www.ipcpu.com/2021/04/prometheus-node_exporter/ https://brian-candler.medium.com/interpreting-prometheus-metrics-for-linux-disk-i-o-utilization-4db53dfedcfc","title":"2.4.1.3 \u78c1\u76d8"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#2413","text":"","title":"2.4.1.3 \u78c1\u76d8\u76d1\u63a7\u6307\u6807"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#_1","text":"","title":"\u5bb9\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#df-h","text":"100 - ((node_filesystem_avail_bytes{} * 100) / node_filesystem_size_bytes{})","title":"df -h"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#df-i","text":"100 - node_filesystem_files_free{}/node_filesystem_files{} * 100","title":"df -i"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#io","text":"","title":"io \u8d1f\u8f7d"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#rs","text":"rate(node_disk_reads_completed_total{}[5m])","title":"r/s"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#ws","text":"rate(node_disk_writes_completed_total{}[5m])","title":"w/s"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#rkbs","text":"","title":"rkB/s"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#wkbs","text":"","title":"wkB/s"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#util","text":"\u78c1\u76d8\u53d1\u751f io \u65f6\u95f4\u7684\u7d2f\u8ba1\u503c\uff0cCounter \u7c7b\u578b node_disk_io_time_seconds_total \u78c1\u76d8\u4f7f\u7528\u7387 %util \uff08\u5373\u5355\u4f4d\u65f6\u95f4\u5185\u78c1\u76d8\u53d1\u751f io \u65f6\u95f4\u5360\u6bd4\uff09 rate(node_disk_io_time_seconds_total{}[5m])","title":"%util"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#avgqu-sz","text":"rate(node_disk_io_time_weighted_seconds_total{}[5m])","title":"avgqu-sz"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#r_await-ms","text":"rate(node_disk_read_time_seconds_total{}[5m]) / rate(node_disk_reads_completed_total{}[5m]) * 1000","title":"r_await (ms)"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#w_await-ms","text":"rate(node_disk_write_time_seconds_total{}[5m]) / rate(node_disk_writes_completed_total{}[5m]) * 1000","title":"w_await (ms)"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/1-node_exporter/3-disk/#_2","text":"https://www.ipcpu.com/2021/04/prometheus-node_exporter/ https://brian-candler.medium.com/interpreting-prometheus-metrics-for-linux-disk-i-o-utilization-4db53dfedcfc","title":"\u53c2\u8003"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/","text":"2.4.2 jmx_exporter jmx_exporter \u53ef\u4ee5\u91c7\u96c6 java \u7a0b\u5e8f\u901a\u8fc7 jmx \u66b4\u9732\u7684\u6570\u636e\u3002 \u6709 2 \u79cd\u8fd0\u884c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f5c\u4e3a javaagent \u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u7684 http server \u8fd0\u884c\uff0c\u4f5c\u4e3a javaagent \u8fd0\u884c\u65f6\u53ef\u4ee5\u989d\u5916\u91c7\u96c6\u5230\u8fdb\u7a0b\u7684 cpu\uff0cmemory \u7b49\u4fe1\u606f\u3002 \u914d\u7f6e \u5728\u4ecb\u7ecd 2 \u79cd\u8fd0\u884c\u65b9\u5f0f\u4e4b\u524d\u5148\u4ecb\u7ecd\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u9879\u662f\u7edf\u4e00\u7684\u3002 jmx_exporter \u7684\u914d\u7f6e\u6587\u4ef6 config.yaml \uff1a --- startDelaySeconds : 0 # \u8fde\u63a5 JMX \u7684\u5730\u5740 # hostPort: 0.0.0.0:9999 # \u5982\u679c JMX \u9700\u8981\u901a\u8fc7\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\uff0c\u8fd9\u8fd9\u91cc\u8bbe\u7f6e username : password : # \u5b8c\u6574\u7684 JMX URL\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 hostPort \u5219\u4e0d\u9700\u8981\u8bbe\u7f6e jmxUrl jmxUrl : service:jmx:rmi:///jndi/rmi://0.0.0.0:9999/jmxrmi # \u5982\u679c JMX \u901a\u8fc7 SSL \u8bbf\u95ee\uff0c\u8bbe\u7f6e\u4e3a true\uff0c\u540c\u65f6\u9700\u8981\u901a\u8fc7\u4ee5\u4e0b system properties \u8bbe\u7f6e\u8bc1\u4e66\u4fe1\u606f\uff1a # -Djavax.net.ssl.keyStore=/home/user/.keystore # -Djavax.net.ssl.keyStorePassword=changeit # -Djavax.net.ssl.trustStore=/home/user/.truststore # -Djavax.net.ssl.trustStorePassword=changeit ssl : false # \u662f\u5426\u5c06\u76d1\u63a7\u9879 name, label \u8f6c\u6362\u4e3a\u5c0f\u5199 lowercaseOutputName : false lowercaseOutputLabelNames : false # \u66b4\u9732\u7684 MBean \u7684 ObjectName \u7684\u767d\u540d\u5355\u5217\u8868 whitelistObjectNames : [ \"org.apache.cassandra.metrics:*\" , \"kafka.*:*\" ] # \u4e0d\u66b4\u9732\u7684 MBean \u7684 ObjectName \u7684\u9ed1\u540d\u5355\u5217\u8868\uff0c\u4f18\u5148\u7ea7\u9ad8\u4e8e whitelistObjectNames blacklistObjectNames : [ \"org.apache.cassandra.metrics:type=ColumnFamily,*\" ] # ObjectName \u5230\u76d1\u63a7\u9879\u7684\u8f6c\u6362\u89c4\u5219\uff0c\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u91c7\u7528\u9ed8\u8ba4\u89c4\u5219 rules : - pattern : 'org.apache.cassandra.metrics<type=(\\w+), name=(\\w+)><>Value: (\\d+)' name : cassandra_$1_$2 value : $3 valueFactor : 0.001 labels : {} help : \"Cassandra metric $1 $2\" type : GAUGE attrNameSnakeCase : false javaagent \u8fd0\u884c\u65b9\u5f0f \u4e0b\u8f7d\u8fd0\u884c\uff1a $ wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar \u5728\u8fd0\u884c youJar.jar \u65f6\u5c06 jmx_exporter \u4f5c\u4e3a javaagent \u8fd0\u884c\uff0c\u8fd9\u91cc 8080 \u4e3a jmx_exporter \u66b4\u9732\u7aef\u53e3\uff0cconfig.yaml \u4e3a jmx_exporter \u914d\u7f6e\u6587\u4ef6\uff1a $ java -javaagent:./jmx_prometheus_javaagent-0.16.1.jar=8080:config.yaml -jar yourJar.jar \u6d4b\u8bd5\u8bbf\u95ee\uff1a $ curl http://localhost:8080/metrics httpserver \u8fd0\u884c\u65b9\u5f0f $ git clone https://github.com/prometheus/jmx_exporter.git $ cd jmx_exporter/jmx_prometheus_httpserver $ mvn package \u5f97\u5230 target/jmx_prometheus_httpserver-0.16.2-SNAPSHOT-jar-with-dependencies.jar rules \u8be6\u7ec6\u4ecb\u7ecd JMX MBean \u5bf9\u8c61\u9700\u8981\u4ee5\u4e00\u4e2a ObjectName \u4f5c\u4e3a\u5b9a\u4f4d\u6807\u8bb0\uff0c ObjectName \u5305\u542b domain \u4e0e properties 2 \u90e8\u5206\uff0cjmx_exporter \u914d\u7f6e\u4e2d\u7684 rules \u5c31\u662f\u5c06 ObjectName \u8f6c\u6362\u4e3a prometheus \u63a5\u53d7\u7684\u4e0a\u62a5\u683c\u5f0f\u3002 \u9ed8\u8ba4\u7684\u8f6c\u6362\u89c4\u5219\u4e0b domain:<beanpropertyName1=beanPropertyValue1, beanpropertyName2=beanPropertyValue2, ...><key1, key2, ...>:attrName=value \u5c06\u88ab\u8f6c\u6362\u4e3a domain_beanPropertyValue1_key1_key2_...keyN_attrName{beanpropertyName2=\"beanPropertyValue2\", ...}: value \u4f8b\u5982 kafka.server:<type=BrokerTopicMetrics,name=BytesInPerSec>:OneMinuteRate=343 \u5c06\u88ab\u8f6c\u6362\u4e3a\uff1a kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesInPerSec\"}: 343 domain: kafka.server -> kafka_server beanPropertyValue1: BrokerTopicMetrics attrName: OneMinuteRate","title":"2.4.2 jmx_exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/#242-jmx_exporter","text":"jmx_exporter \u53ef\u4ee5\u91c7\u96c6 java \u7a0b\u5e8f\u901a\u8fc7 jmx \u66b4\u9732\u7684\u6570\u636e\u3002 \u6709 2 \u79cd\u8fd0\u884c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f5c\u4e3a javaagent \u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5355\u72ec\u7684 http server \u8fd0\u884c\uff0c\u4f5c\u4e3a javaagent \u8fd0\u884c\u65f6\u53ef\u4ee5\u989d\u5916\u91c7\u96c6\u5230\u8fdb\u7a0b\u7684 cpu\uff0cmemory \u7b49\u4fe1\u606f\u3002","title":"2.4.2 jmx_exporter"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/#_1","text":"\u5728\u4ecb\u7ecd 2 \u79cd\u8fd0\u884c\u65b9\u5f0f\u4e4b\u524d\u5148\u4ecb\u7ecd\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u9879\u662f\u7edf\u4e00\u7684\u3002 jmx_exporter \u7684\u914d\u7f6e\u6587\u4ef6 config.yaml \uff1a --- startDelaySeconds : 0 # \u8fde\u63a5 JMX \u7684\u5730\u5740 # hostPort: 0.0.0.0:9999 # \u5982\u679c JMX \u9700\u8981\u901a\u8fc7\u7528\u6237\u540d\u5bc6\u7801\u8ba4\u8bc1\uff0c\u8fd9\u8fd9\u91cc\u8bbe\u7f6e username : password : # \u5b8c\u6574\u7684 JMX URL\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86 hostPort \u5219\u4e0d\u9700\u8981\u8bbe\u7f6e jmxUrl jmxUrl : service:jmx:rmi:///jndi/rmi://0.0.0.0:9999/jmxrmi # \u5982\u679c JMX \u901a\u8fc7 SSL \u8bbf\u95ee\uff0c\u8bbe\u7f6e\u4e3a true\uff0c\u540c\u65f6\u9700\u8981\u901a\u8fc7\u4ee5\u4e0b system properties \u8bbe\u7f6e\u8bc1\u4e66\u4fe1\u606f\uff1a # -Djavax.net.ssl.keyStore=/home/user/.keystore # -Djavax.net.ssl.keyStorePassword=changeit # -Djavax.net.ssl.trustStore=/home/user/.truststore # -Djavax.net.ssl.trustStorePassword=changeit ssl : false # \u662f\u5426\u5c06\u76d1\u63a7\u9879 name, label \u8f6c\u6362\u4e3a\u5c0f\u5199 lowercaseOutputName : false lowercaseOutputLabelNames : false # \u66b4\u9732\u7684 MBean \u7684 ObjectName \u7684\u767d\u540d\u5355\u5217\u8868 whitelistObjectNames : [ \"org.apache.cassandra.metrics:*\" , \"kafka.*:*\" ] # \u4e0d\u66b4\u9732\u7684 MBean \u7684 ObjectName \u7684\u9ed1\u540d\u5355\u5217\u8868\uff0c\u4f18\u5148\u7ea7\u9ad8\u4e8e whitelistObjectNames blacklistObjectNames : [ \"org.apache.cassandra.metrics:type=ColumnFamily,*\" ] # ObjectName \u5230\u76d1\u63a7\u9879\u7684\u8f6c\u6362\u89c4\u5219\uff0c\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u91c7\u7528\u9ed8\u8ba4\u89c4\u5219 rules : - pattern : 'org.apache.cassandra.metrics<type=(\\w+), name=(\\w+)><>Value: (\\d+)' name : cassandra_$1_$2 value : $3 valueFactor : 0.001 labels : {} help : \"Cassandra metric $1 $2\" type : GAUGE attrNameSnakeCase : false","title":"\u914d\u7f6e"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/#javaagent","text":"\u4e0b\u8f7d\u8fd0\u884c\uff1a $ wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar \u5728\u8fd0\u884c youJar.jar \u65f6\u5c06 jmx_exporter \u4f5c\u4e3a javaagent \u8fd0\u884c\uff0c\u8fd9\u91cc 8080 \u4e3a jmx_exporter \u66b4\u9732\u7aef\u53e3\uff0cconfig.yaml \u4e3a jmx_exporter \u914d\u7f6e\u6587\u4ef6\uff1a $ java -javaagent:./jmx_prometheus_javaagent-0.16.1.jar=8080:config.yaml -jar yourJar.jar \u6d4b\u8bd5\u8bbf\u95ee\uff1a $ curl http://localhost:8080/metrics","title":"javaagent \u8fd0\u884c\u65b9\u5f0f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/#httpserver","text":"$ git clone https://github.com/prometheus/jmx_exporter.git $ cd jmx_exporter/jmx_prometheus_httpserver $ mvn package \u5f97\u5230 target/jmx_prometheus_httpserver-0.16.2-SNAPSHOT-jar-with-dependencies.jar","title":"httpserver \u8fd0\u884c\u65b9\u5f0f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/#rules","text":"JMX MBean \u5bf9\u8c61\u9700\u8981\u4ee5\u4e00\u4e2a ObjectName \u4f5c\u4e3a\u5b9a\u4f4d\u6807\u8bb0\uff0c ObjectName \u5305\u542b domain \u4e0e properties 2 \u90e8\u5206\uff0cjmx_exporter \u914d\u7f6e\u4e2d\u7684 rules \u5c31\u662f\u5c06 ObjectName \u8f6c\u6362\u4e3a prometheus \u63a5\u53d7\u7684\u4e0a\u62a5\u683c\u5f0f\u3002 \u9ed8\u8ba4\u7684\u8f6c\u6362\u89c4\u5219\u4e0b domain:<beanpropertyName1=beanPropertyValue1, beanpropertyName2=beanPropertyValue2, ...><key1, key2, ...>:attrName=value \u5c06\u88ab\u8f6c\u6362\u4e3a domain_beanPropertyValue1_key1_key2_...keyN_attrName{beanpropertyName2=\"beanPropertyValue2\", ...}: value \u4f8b\u5982 kafka.server:<type=BrokerTopicMetrics,name=BytesInPerSec>:OneMinuteRate=343 \u5c06\u88ab\u8f6c\u6362\u4e3a\uff1a kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesInPerSec\"}: 343 domain: kafka.server -> kafka_server beanPropertyValue1: BrokerTopicMetrics attrName: OneMinuteRate","title":"rules \u8be6\u7ec6\u4ecb\u7ecd"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/","text":"2.4.2.1 \u4f7f\u7528 jmx_exporter \u91c7\u96c6 jvm \u76d1\u63a7 gc java gc \u7684 MBean \u5bf9\u8c61\u662f GarbageCollectorMXBean jvm_gc_collection_seconds_count \u8868\u793a gc \u53d1\u751f\u7684\u6b21\u6570\uff0c\u7d2f\u8ba1\u503c\uff08Counter\uff09 jvm_gc_collection_seconds_sum \u8868\u793a gc \u6d88\u8017\u7684\u65f6\u957f\uff0c\u7d2f\u8ba1\u503c\uff08Counter\uff09 \u6bcf\u79d2\u53d1\u751f\u7684 gc \u6b21\u6570 rate(jvm_gc_collection_seconds_count[2m]) \u6bcf\u79d2\u8017\u8d39\u5728 gc \u7684\u65f6\u957f rate(jvm_gc_collection_seconds_sum[2m]) \u6bcf\u6b21 gc \u8017\u8d39\u7684\u65f6\u957f rate(jvm_gc_collection_seconds_sum[2m]) / rate(jvm_gc_collection_seconds_count[2m]) memory \u5806\u7a7a\u95f4\u4f7f\u7528\u7387 jvm_memory_bytes_used{area=\"heap\"} / jvm_memory_bytes_max{area=\"heap\"} * 100 \u53c2\u8003 https://www.robustperception.io/measuring-java-garbage-collection-with-prometheus","title":"2.4.2.1 jvm"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#2421-jmx_exporter-jvm","text":"","title":"2.4.2.1 \u4f7f\u7528 jmx_exporter \u91c7\u96c6 jvm \u76d1\u63a7"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#gc","text":"java gc \u7684 MBean \u5bf9\u8c61\u662f GarbageCollectorMXBean jvm_gc_collection_seconds_count \u8868\u793a gc \u53d1\u751f\u7684\u6b21\u6570\uff0c\u7d2f\u8ba1\u503c\uff08Counter\uff09 jvm_gc_collection_seconds_sum \u8868\u793a gc \u6d88\u8017\u7684\u65f6\u957f\uff0c\u7d2f\u8ba1\u503c\uff08Counter\uff09","title":"gc"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#gc_1","text":"rate(jvm_gc_collection_seconds_count[2m])","title":"\u6bcf\u79d2\u53d1\u751f\u7684 gc \u6b21\u6570"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#gc_2","text":"rate(jvm_gc_collection_seconds_sum[2m])","title":"\u6bcf\u79d2\u8017\u8d39\u5728 gc \u7684\u65f6\u957f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#gc_3","text":"rate(jvm_gc_collection_seconds_sum[2m]) / rate(jvm_gc_collection_seconds_count[2m])","title":"\u6bcf\u6b21 gc \u8017\u8d39\u7684\u65f6\u957f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#memory","text":"","title":"memory"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#_1","text":"jvm_memory_bytes_used{area=\"heap\"} / jvm_memory_bytes_max{area=\"heap\"} * 100","title":"\u5806\u7a7a\u95f4\u4f7f\u7528\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/1-jvm/#_2","text":"https://www.robustperception.io/measuring-java-garbage-collection-with-prometheus","title":"\u53c2\u8003"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/","text":"2.4.2.2 \u4f7f\u7528 jmx_exporter \u91c7\u96c6 kafka \u76d1\u63a7","title":"2.4.2.2 kafka"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/#2422-jmx_exporter-kafka","text":"","title":"2.4.2.2 \u4f7f\u7528 jmx_exporter \u91c7\u96c6 kafka \u76d1\u63a7"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/1-%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/","text":"2.4.2.2.1 \u4ee5 javaagent \u7684\u65b9\u5f0f\u542f\u52a8 \u4fee\u6539 kafka \u7684 kafka-run-class.sh \u6587\u4ef6\uff0c\u589e\u52a0 javaagent \u914d\u7f6e\uff1a # ... if [[ $JMX_PORT && -f /usr/local/jmx_prometheus_javaagent-0.16.1.jar && -f /etc/default/jmx_prometheus_javaagent.yaml ]] ; then JMX_EXPORTER = -javaagent:/usr/local/jmx_prometheus_javaagent-0.16.1.jar = 5556 :/etc/default/jmx_prometheus_javaagent.yaml else JMX_EXPORTER = \"\" fi # ... # Launch mode if [ \"x $DAEMON_MODE \" = \"xtrue\" ] ; then nohup $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS $JMX_EXPORTER -cp $CLASSPATH $KAFKA_OPTS \" $@ \" > \" $CONSOLE_OUTPUT_FILE \" 2 > & 1 < /dev/null & else exec $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS $JMX_EXPORTER -cp $CLASSPATH $KAFKA_OPTS \" $@ \" fi \u589e\u52a0 javaagent \u914d\u7f6e\u540e\u53ef\u4ee5\u4ece 5556 \u7aef\u53e3\u83b7\u53d6 jmx metrics\uff1a $ curl http://localhost:5556/metrics \u4fee\u6539 prometheus.yml \uff0c\u589e\u52a0 job\uff1a scrape_configs : - job_name : 'kafka1' static_configs : - targets : [ '10.9.164.4:5556' ] - job_name : 'kafka2' static_configs : - targets : [ '10.9.140.204:5556' ] - job_name : 'kafka3' static_configs : - targets : [ '10.9.145.115:5556' ]","title":"2.4.2.2.1 \u542f\u52a8\u65b9\u5f0f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/1-%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/#24221-javaagent","text":"\u4fee\u6539 kafka \u7684 kafka-run-class.sh \u6587\u4ef6\uff0c\u589e\u52a0 javaagent \u914d\u7f6e\uff1a # ... if [[ $JMX_PORT && -f /usr/local/jmx_prometheus_javaagent-0.16.1.jar && -f /etc/default/jmx_prometheus_javaagent.yaml ]] ; then JMX_EXPORTER = -javaagent:/usr/local/jmx_prometheus_javaagent-0.16.1.jar = 5556 :/etc/default/jmx_prometheus_javaagent.yaml else JMX_EXPORTER = \"\" fi # ... # Launch mode if [ \"x $DAEMON_MODE \" = \"xtrue\" ] ; then nohup $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS $JMX_EXPORTER -cp $CLASSPATH $KAFKA_OPTS \" $@ \" > \" $CONSOLE_OUTPUT_FILE \" 2 > & 1 < /dev/null & else exec $JAVA $KAFKA_HEAP_OPTS $KAFKA_JVM_PERFORMANCE_OPTS $KAFKA_GC_LOG_OPTS $KAFKA_JMX_OPTS $KAFKA_LOG4J_OPTS $JMX_EXPORTER -cp $CLASSPATH $KAFKA_OPTS \" $@ \" fi \u589e\u52a0 javaagent \u914d\u7f6e\u540e\u53ef\u4ee5\u4ece 5556 \u7aef\u53e3\u83b7\u53d6 jmx metrics\uff1a $ curl http://localhost:5556/metrics \u4fee\u6539 prometheus.yml \uff0c\u589e\u52a0 job\uff1a scrape_configs : - job_name : 'kafka1' static_configs : - targets : [ '10.9.164.4:5556' ] - job_name : 'kafka2' static_configs : - targets : [ '10.9.140.204:5556' ] - job_name : 'kafka3' static_configs : - targets : [ '10.9.145.115:5556' ]","title":"2.4.2.2.1 \u4ee5 javaagent \u7684\u65b9\u5f0f\u542f\u52a8"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/","text":"2.4.2.2.2 \u76d1\u63a7\u9879 kafka \u901a\u8fc7 jmx \u66b4\u9732\u5185\u90e8\u76d1\u63a7\uff0c\u5177\u4f53\u76d1\u63a7\u9879\u53ef\u4ee5\u67e5\u770b\uff1ahttps://kafka.apache.org/documentation/#monitoring \u8fd9\u91cc\u5217\u51fa\u4e00\u4e9b\u9700\u8981\u5173\u6ce8\u7684\u76d1\u63a7\u9879\u7684 jmx MBean ObjectName \uff0c\u4ee5\u53ca jmx_exporter \u5c06\u5176\u8f6c\u6362\u540e\u5bf9\u5e94\u7684 promql \u67e5\u8be2\u8bed\u53e5\uff1a \u6d88\u606f\u901f\u7387 \u5ba2\u6237\u7aef\u4e0e broker \u4e4b\u95f4\u6d88\u606f\u5199\u5165/\u8bfb\u53d6\u901f\u7387\u3002 kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec[,topic=*] kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec[,topic=*] kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec[,topic=*] kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"MessagesInPerSec\",topic=\"\"} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesInPerSec\", topic=\"\"} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesOutPerSec\", topic=\"\"} broker \u4e0e broker \u4e4b\u95f4\u526f\u672c\u540c\u6b65\u5e26\u6765\u7684\u6d88\u606f\u5199\u5165/\u8bfb\u53d6\u901f\u7387\u3002 kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"ReplicationBytesInPerSec\",} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"ReplicationBytesOutPerSec\",} \u8bf7\u6c42\u901f\u7387 kafka.network:type=RequestMetrics,name=RequestsPerSec,request={Produce|FetchConsumer|FetchFollower} kafka_network_RequestMetrics_OneMinuteRate{name=\"RequestsPerSec\",request=\"Produce\",} \u8bf7\u6c42\u901f\u7387 \u4ee5 topic \u7ef4\u5ea6\u7edf\u8ba1\u8bf7\u6c42\u901f\u7387 kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec \u5931\u8d25\u8bf7\u6c42\u901f\u7387 \u7edf\u8ba1\u5931\u8d25\u7684\u8bf7\u6c42/\u54cd\u5e94\uff0c\u5982\u679c error=NONE \u8868\u793a\u54cd\u5e94\u662f\u6210\u529f\u7684\u3002 kafka.network:type=RequestMetrics,name=ErrorsPerSec,request=([-.\\w]+),error=([-.\\w]+) kafka_network_RequestMetrics_OneMinuteRate{name=\"ErrorsPerSec\", error!=\"NONE\"} \u8bf7\u6c42\u5927\u5c0f kafka.network:type=RequestMetrics,name=RequestBytes,request=([-.\\w]+) kafka_network_RequestMetrics_OneMinuteRate{name=\"RequestBytes\", } \u7f51\u7edc\u5904\u7406\u7ebf\u7a0b\u7a7a\u95f2\u7387 kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent \u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\u7a7a\u95f2\u7387 kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent leader \u6570\u91cf kafka.server:type=ReplicaManager,name=LeaderCount \u5206\u533a\u6570\u91cf kafka.server:type=ReplicaManager,name=PartitionCount \u6709\u843d\u540e\u526f\u672c\u7684\u5206\u533a\u6570\u91cf |isr| < |all replicas| \u7684 partition \u6570 kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions |isr| = min.insync.replicas \u7684 partition \u6570 kafka.server:type=ReplicaManager,name=AtMinIsrPartitionCount \u975e\u540c\u6b65\u7684 replica \u6570\u91cf kafka.server:type=ReplicaManager,name=OfflineReplicaCount \u843d\u540e\u6d88\u606f\u6570\u91cf follower \u548c leader replica \u4e4b\u95f4\u843d\u540e\u7684\u6d88\u606f\u6570\u91cf\u3002 kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica kafka_server_ReplicaFetcherManager_Value{name=\"MaxLag\", clientId=\"Replica\"} \u5177\u4f53\u5230 topic partition \u7ea7\u522b\u843d\u540e\u7684\u6d88\u606f\u6570\u91cf kafka.server:type=FetcherLagMetrics,name=ConsumerLag,clientId=([-.\\w]+),topic=([-.\\w]+),partition=([0-9]+) kafka_server_FetcherLagMetrics_Value{name=\"ConsumerLag\",clientId=\"ReplicaFetcherThread-0-4\",topic=\"test\",partition=\"0\",} Isr \u5217\u8868\u6269\u7f29\u5bb9\u901f\u7387 kafka.server:type=ReplicaManager,name=IsrShrinksPerSec kafka.server:type=ReplicaManager,name=IsrExpandsPerSec \u5f53\u524d broker \u662f\u5426\u4e3a controller \u53ea\u6709\u5f53 broker \u4f5c\u4e3a\u96c6\u7fa4 controller \u65f6\u4e3a 1\uff0c\u6574\u4e2a\u96c6\u7fa4\u5e94\u8be5\u53ea\u6709 1 \u4e2a controller kafka.controller:type=KafkaController,name=ActiveControllerCount Leader \u9009\u4e3e\u901f\u7387 kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs Unclean leader \u9009\u4e3e\u901f\u7387 kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec \u8bf7\u6c42/\u54cd\u5e94\u961f\u5217 kafka.network:type=RequestChannel,name=RequestQueueSize Size of the request queue. A congested request queue will not be able to process incoming or outgoing requests. kafka.network:type=RequestChannel,name=ResponseQueueSize Size of the response queue. The response queue is unbounded. A congested response queue can result in delayed response times and memory pressure on the broker. \u8bf7\u6c42\u8017\u65f6 Total time in ms to serve the specified request. kafka.network:type=RequestMetrics,name=TotalTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits in the request queue. kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request is processed at the leader. kafka.network:type=RequestMetrics,name=LocalTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits for the follower. This is non-zero for produce requests when acks=all. kafka.network:type=RequestMetrics,name=RemoteTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits in the response queue. kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request={Produce|FetchConsumer|FetchFollower} Time to send the response. kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request={Produce|FetchConsumer|FetchFollower}","title":"2.4.2.2.2 \u76d1\u63a7\u9879"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#24222","text":"kafka \u901a\u8fc7 jmx \u66b4\u9732\u5185\u90e8\u76d1\u63a7\uff0c\u5177\u4f53\u76d1\u63a7\u9879\u53ef\u4ee5\u67e5\u770b\uff1ahttps://kafka.apache.org/documentation/#monitoring \u8fd9\u91cc\u5217\u51fa\u4e00\u4e9b\u9700\u8981\u5173\u6ce8\u7684\u76d1\u63a7\u9879\u7684 jmx MBean ObjectName \uff0c\u4ee5\u53ca jmx_exporter \u5c06\u5176\u8f6c\u6362\u540e\u5bf9\u5e94\u7684 promql \u67e5\u8be2\u8bed\u53e5\uff1a","title":"2.4.2.2.2 \u76d1\u63a7\u9879"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_1","text":"\u5ba2\u6237\u7aef\u4e0e broker \u4e4b\u95f4\u6d88\u606f\u5199\u5165/\u8bfb\u53d6\u901f\u7387\u3002 kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec[,topic=*] kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec[,topic=*] kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec[,topic=*] kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"MessagesInPerSec\",topic=\"\"} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesInPerSec\", topic=\"\"} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"BytesOutPerSec\", topic=\"\"} broker \u4e0e broker \u4e4b\u95f4\u526f\u672c\u540c\u6b65\u5e26\u6765\u7684\u6d88\u606f\u5199\u5165/\u8bfb\u53d6\u901f\u7387\u3002 kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesInPerSec kafka.server:type=BrokerTopicMetrics,name=ReplicationBytesOutPerSec kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"ReplicationBytesInPerSec\",} kafka_server_BrokerTopicMetrics_OneMinuteRate{name=\"ReplicationBytesOutPerSec\",}","title":"\u6d88\u606f\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_2","text":"kafka.network:type=RequestMetrics,name=RequestsPerSec,request={Produce|FetchConsumer|FetchFollower} kafka_network_RequestMetrics_OneMinuteRate{name=\"RequestsPerSec\",request=\"Produce\",}","title":"\u8bf7\u6c42\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_3","text":"\u4ee5 topic \u7ef4\u5ea6\u7edf\u8ba1\u8bf7\u6c42\u901f\u7387 kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec","title":"\u8bf7\u6c42\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_4","text":"\u7edf\u8ba1\u5931\u8d25\u7684\u8bf7\u6c42/\u54cd\u5e94\uff0c\u5982\u679c error=NONE \u8868\u793a\u54cd\u5e94\u662f\u6210\u529f\u7684\u3002 kafka.network:type=RequestMetrics,name=ErrorsPerSec,request=([-.\\w]+),error=([-.\\w]+) kafka_network_RequestMetrics_OneMinuteRate{name=\"ErrorsPerSec\", error!=\"NONE\"}","title":"\u5931\u8d25\u8bf7\u6c42\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_5","text":"kafka.network:type=RequestMetrics,name=RequestBytes,request=([-.\\w]+) kafka_network_RequestMetrics_OneMinuteRate{name=\"RequestBytes\", }","title":"\u8bf7\u6c42\u5927\u5c0f"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_6","text":"kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent","title":"\u7f51\u7edc\u5904\u7406\u7ebf\u7a0b\u7a7a\u95f2\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_7","text":"kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent","title":"\u8bf7\u6c42\u5904\u7406\u7ebf\u7a0b\u7a7a\u95f2\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#leader","text":"kafka.server:type=ReplicaManager,name=LeaderCount","title":"leader \u6570\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_8","text":"kafka.server:type=ReplicaManager,name=PartitionCount","title":"\u5206\u533a\u6570\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_9","text":"|isr| < |all replicas| \u7684 partition \u6570 kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions |isr| = min.insync.replicas \u7684 partition \u6570 kafka.server:type=ReplicaManager,name=AtMinIsrPartitionCount","title":"\u6709\u843d\u540e\u526f\u672c\u7684\u5206\u533a\u6570\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#replica","text":"kafka.server:type=ReplicaManager,name=OfflineReplicaCount","title":"\u975e\u540c\u6b65\u7684 replica \u6570\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_10","text":"follower \u548c leader replica \u4e4b\u95f4\u843d\u540e\u7684\u6d88\u606f\u6570\u91cf\u3002 kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica kafka_server_ReplicaFetcherManager_Value{name=\"MaxLag\", clientId=\"Replica\"} \u5177\u4f53\u5230 topic partition \u7ea7\u522b\u843d\u540e\u7684\u6d88\u606f\u6570\u91cf kafka.server:type=FetcherLagMetrics,name=ConsumerLag,clientId=([-.\\w]+),topic=([-.\\w]+),partition=([0-9]+) kafka_server_FetcherLagMetrics_Value{name=\"ConsumerLag\",clientId=\"ReplicaFetcherThread-0-4\",topic=\"test\",partition=\"0\",}","title":"\u843d\u540e\u6d88\u606f\u6570\u91cf"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#isr","text":"kafka.server:type=ReplicaManager,name=IsrShrinksPerSec kafka.server:type=ReplicaManager,name=IsrExpandsPerSec","title":"Isr \u5217\u8868\u6269\u7f29\u5bb9\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#broker-controller","text":"\u53ea\u6709\u5f53 broker \u4f5c\u4e3a\u96c6\u7fa4 controller \u65f6\u4e3a 1\uff0c\u6574\u4e2a\u96c6\u7fa4\u5e94\u8be5\u53ea\u6709 1 \u4e2a controller kafka.controller:type=KafkaController,name=ActiveControllerCount","title":"\u5f53\u524d broker \u662f\u5426\u4e3a controller"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#leader_1","text":"kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs","title":"Leader \u9009\u4e3e\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#unclean-leader","text":"kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec","title":"Unclean leader \u9009\u4e3e\u901f\u7387"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_11","text":"kafka.network:type=RequestChannel,name=RequestQueueSize Size of the request queue. A congested request queue will not be able to process incoming or outgoing requests. kafka.network:type=RequestChannel,name=ResponseQueueSize Size of the response queue. The response queue is unbounded. A congested response queue can result in delayed response times and memory pressure on the broker.","title":"\u8bf7\u6c42/\u54cd\u5e94\u961f\u5217"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/2-%E7%9B%91%E6%8E%A7%E9%A1%B9/#_12","text":"Total time in ms to serve the specified request. kafka.network:type=RequestMetrics,name=TotalTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits in the request queue. kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request is processed at the leader. kafka.network:type=RequestMetrics,name=LocalTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits for the follower. This is non-zero for produce requests when acks=all. kafka.network:type=RequestMetrics,name=RemoteTimeMs,request={Produce|FetchConsumer|FetchFollower} Time the request waits in the response queue. kafka.network:type=RequestMetrics,name=ResponseQueueTimeMs,request={Produce|FetchConsumer|FetchFollower} Time to send the response. kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request={Produce|FetchConsumer|FetchFollower}","title":"\u8bf7\u6c42\u8017\u65f6"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/3-rules%E9%85%8D%E7%BD%AE/","text":"2.4.2.2.3 rules \u8bbe\u7f6e rules : # Special cases and very specific rules - pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value name : kafka_server_$1_$2 type : GAUGE labels : clientId : \"$3\" topic : \"$4\" partition : \"$5\" - pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value name : kafka_server_$1_$2 type : GAUGE labels : clientId : \"$3\" broker : \"$4:$5\" # Generic per-second counters with 0-2 key/value pairs - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_total type : COUNTER labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+)><>Count name : kafka_$1_$2_$3_total type : COUNTER labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*><>Count name : kafka_$1_$2_$3_total type : COUNTER # Generic gauges with 0-2 key/value pairs - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE # Emulate Prometheus 'Summary' metrics for the exported 'Histogram's. # # Note that these are missing the '_sum' metric! - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*), (.+)=(.+)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" \"$6\" : \"$7\" quantile : \"0.$8\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" quantile : \"0.$6\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : quantile : \"0.$4\"","title":"2.4.2.2.3 rules \u914d\u7f6e"},{"location":"2-%E7%9B%91%E6%8E%A7/4-exporter/2-jmx_exporter/2-kafka/3-rules%E9%85%8D%E7%BD%AE/#24223-rules","text":"rules : # Special cases and very specific rules - pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value name : kafka_server_$1_$2 type : GAUGE labels : clientId : \"$3\" topic : \"$4\" partition : \"$5\" - pattern : kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value name : kafka_server_$1_$2 type : GAUGE labels : clientId : \"$3\" broker : \"$4:$5\" # Generic per-second counters with 0-2 key/value pairs - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_total type : COUNTER labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*, (.+)=(.+)><>Count name : kafka_$1_$2_$3_total type : COUNTER labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)PerSec\\w*><>Count name : kafka_$1_$2_$3_total type : COUNTER # Generic gauges with 0-2 key/value pairs - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>Value name : kafka_$1_$2_$3 type : GAUGE # Emulate Prometheus 'Summary' metrics for the exported 'Histogram's. # # Note that these are missing the '_sum' metric! - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER labels : \"$4\" : \"$5\" \"$6\" : \"$7\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*), (.+)=(.+)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" \"$6\" : \"$7\" quantile : \"0.$8\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER labels : \"$4\" : \"$5\" - pattern : kafka.(\\w+)<type=(.+), name=(.+), (.+)=(.*)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : \"$4\" : \"$5\" quantile : \"0.$6\" - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>Count name : kafka_$1_$2_$3_count type : COUNTER - pattern : kafka.(\\w+)<type=(.+), name=(.+)><>(\\d+)thPercentile name : kafka_$1_$2_$3 type : GAUGE labels : quantile : \"0.$4\"","title":"2.4.2.2.3 rules \u8bbe\u7f6e"}]}